{"version":"https://jsonfeed.org/version/1","title":"M. Knepprath","home_page_url":"https://mknepprath.com","feed_url":"https://mknepprath.com/feed.json","description":"Michael Knepprath is a Software Engineer at Walmart Labs.","icon":"https://mknepprath.com/assets/apple-touch-icon-152x152.png","favicon":"https://mknepprath.com/assets/favicon.ico","author":{"name":"Michael Knepprath","url":"https://mknepprath.com","avatar":"https://mknepprath.com/assets/memoji.png"},"items":[{"id":"https://mknepprath.com/writing/2019","url":"https://mknepprath.com/writing/2019","title":"2019 in Review","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  image: \"/assets/2019-in-review-1.png\",\n  published: true,\n  publishedAt: \"2019-12-29\",\n  summary: \"A look at my accomplishments during the past year.\",\n  title: \"2019 in Review\"\n};\n\nexport default () => (\n  <BlogPage\n    dateTime={meta.publishedAt}\n    description={meta.summary}\n    ogImage={meta.image}\n    title={meta.title}\n  >\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n    <p>\n      I didn't officially record or publish any goals for 2019, so these are\n      based on memory and hindsight - which means I accomplished most of them.\n      Yay!\n    </p>\n    <img\n      alt=\"Top 9 Instagram photos from 2019 (1-3).\"\n      className=\"blog-image\"\n      src=\"/assets/2019-in-review-1.png\"\n    />\n    <h2>2019 Goals</h2>\n    <h3>Get a new job ✅</h3>\n    <p>\n      This was a goal that had rolled over from 2018. With my wife starting\n      medical school soon (a.k.a. this year), I was hoping to find a more\n      remote-friendly company. I wanted to be free to easily move to wherever\n      her school of choice would be. In February, I landed an interview at\n      Walmart Labs and got a position on my first fully-remote team. I'm less\n      than a year in, but enjoying it!\n    </p>\n    <h3>Read books ✅</h3>\n    <p>\n      I've been having a hard time reading books since college despite being an\n      avid reader growing up. Notable books I read this year:\n    </p>\n    <ul>\n      <li>\n        <a href=\"https://www.goodreads.com/book/show/37976541-bad-blood\">\n          Bad Blood\n        </a>{\" \"}\n        by John Carreyrou\n      </li>\n      <li>\n        <a href=\"https://www.goodreads.com/book/show/44573628-super-pumped\">\n          Super Pumped\n        </a>{\" \"}\n        by Mike Isaac\n      </li>\n      <li>\n        <a href=\"https://www.goodreads.com/book/show/840.The_Design_of_Everyday_Things\">\n          The Design of Everyday Things\n        </a>{\" \"}\n        by Don Norman\n      </li>\n      <li>\n        <a href=\"https://www.goodreads.com/book/show/6095883-design-as-art\">\n          Design as Art\n        </a>{\" \"}\n        by Bruno Munari\n      </li>{\" \"}\n    </ul>\n    <p>\n      I've been averaging less than 10 books a year, which is... not great. But\n      I'm glad it's not nothing.\n    </p>\n    <h3>Blog ✅</h3>\n    <p>\n      My website included a link to Medium in lieu of a blog from ~2015 until\n      recently.{\" \"}\n      <a href=\"https://github.com/mknepprath/mknepprath-next/pull/10/files\">\n        That changed this year\n      </a>{\" \"}\n      for a few reasons. First, developing a blog from scratch seemed like a fun\n      project. Second, Medium had become pretty aggressive with paywalls, etc,\n      and I wanted to feel like I had ownership over my writing again. Finally,\n      I hoped that doing this work would motivate me to do more writing - my\n      Medium profile had become stagnant. This appears to be have been\n      successful, since I didn't write any posts last year and wrote 5 this\n      year:\n    </p>\n    <ul>\n      <li>\n        <a href=\"/writing/create-a-website\">\n          Create a Simple Website with GitHub Pages\n        </a>\n      </li>\n      <li>\n        <a href=\"/writing/breathe\">Code Should Breathe</a>\n      </li>\n      <li>\n        <a href=\"/writing/design-process\">Thoughts on Design Process</a>\n      </li>\n      <li>\n        <a href=\"/writing/sequential-art\">Sequential Art™</a>\n      </li>\n      <li>2019 in Review (this post)</li>\n    </ul>\n    <p>\n      Bonus: I hunted down old posts from previous iterations of my website\n      using the Wayback Machine and <a href=\"/writing\">included them here</a> as\n      well.\n    </p>\n    <h3>Quit Facebook 🟡</h3>\n    <p>\n      While I didn't use Facebook all year, I still have an account. It's\n      currently deactivated, but I can't consider this a success until it's\n      gone... permanently.\n    </p>\n    <h3>Develop an iOS app 🔴</h3>\n    <p>\n      I had hoped to complete an iOS app I'd started working on in 2018 for\n      tracking movies. I learned a lot, but it ended up being a bigger\n      undertaking than I'd anticipated and I was no longer able to dedicate the\n      time required to push it out. I released a working, unpolished beta to\n      TestFlight, but that's as far as it got.\n    </p>\n    <h3>Illustrate ✅</h3>\n    <p>\n      I have an art/graphic design college degree, which means I feel\n      unfulfilled if I don't illustrate <em>something</em> each year. This year\n      I illustrated a few moths and posted them to{\" \"}\n      <a href=\"https://dribbble.com/mknepprath\">Dribbble</a>.\n    </p>\n    <img\n      alt=\"Top 9 Instagram photos from 2019 (4-6).\"\n      className=\"blog-image\"\n      src=\"/assets/2019-in-review-2.png\"\n    />\n    <h2>Cool Things</h2>\n    <h3>Travel</h3>\n    <p>\n      On top of starting a new job, moving to a new state, and changing nearly\n      everything else in our lives, I also traveled more than ever before.\n      According to <a href=\"https://www.flightyapp.com/\">Flighty</a>, I flew the\n      equivalent of .9x around the earth this year alone.\n    </p>\n    <img\n      alt=\"2019 in Flighty\"\n      className=\"blog-image\"\n      src=\"/assets/2019-in-review-flights.jpg\"\n    />\n    <p>Some highlights:</p>\n    <ul>\n      <li>January, Imaging USA with White House Custom Colour</li>\n      <li>March, Disneyland with my family</li>\n      <li>April, Walmart Labs meetup in Carlsbad, CA</li>\n      <li>September, another Walmart Labs meetup in SLC</li>\n      <li>October, React Conf</li>\n    </ul>\n    <h3>Attended a local meetup</h3>\n    <p>\n      This wasn't available where I lived in Minnesota. It's been very cool to\n      attend a React meetup in Cleveland with developers of varying levels of\n      experience. I've met new friends and learned a lot from the few I've\n      attended already. I look forward to continuing this in 2020.\n    </p>\n    <h3>Twitter bots</h3>\n    <p>\n      I don't have much to show for it, but I worked on my Twitter bots quite a\n      bit. <a href=\"https://twitter.com/FamiliarLilt\">Lilt</a> was almost{\" \"}\n      <a href=\"https://github.com/mknepprath/lilt/commit/285034e77ef43505c119f6f459c87695eff51719\">\n        entirely rewritten\n      </a>{\" \"}\n      and the game itself has been expanded. I hope to do more before formally\n      announcing it, however.\n    </p>\n    <img\n      alt=\"Top 9 Instagram photos from 2019 (7-9).\"\n      className=\"blog-image\"\n      src=\"/assets/2019-in-review-3.png\"\n    />\n    <h2>2020 Goals</h2>\n    <p>\n      For the first time ever, here's my list of what I'd like to accomplish\n      during the next year.\n    </p>\n    <h3>Read 10 books</h3>\n    <p>\n      I've been averaging less than 10 books per year. If I can make it to 10,\n      I'll be happy.\n    </p>\n    <h3>Write 10 blog posts</h3>\n    <p>\n      I added this blog to my website in August and averaged one post per month.\n      This should be achievable.\n    </p>\n    <h3>Release the next chapter of Lilt</h3>\n    <p>\n      I have a couple goals for{\" \"}\n      <a href=\"https://twitter.com/familiarlilt\">Lilt</a>. First, I hope to\n      develop a user interface to help manage moves, locations, and items in the\n      game (likely with React). Second, I want to introduce more areas to\n      explore. While the interface would be nice for me, it doesn't add anything\n      of interest for Lilt's players. This is why I want to focus on expanding\n      the game first.\n    </p>\n    <h3>Complete 3 online courses</h3>\n    <p>\n      I've purchased a bunch of online courses over the years that I'd like to\n      finish. I hope to finish at least three of these during 2020:\n    </p>\n    <ul>\n      <li>\n        <a href=\"https://www.3dfordesigners.com/\">3D for Designers</a> by Devon\n        Ko\n      </li>\n      <li>\n        <a href=\"https://testingjavascript.com/\">Testing JavaScript</a> with\n        Kent C. Dodds\n      </li>\n      <li>5 courses on Udemy (Swift, React, Python, TensorFlow...)</li>\n    </ul>\n    <h3>Draw, illustrate, animate!</h3>\n    <p>\n      I want to draw some more comics, create some short animations, etc. I\n      don't care all that much about the format as long as I do some cool visual\n      work. I may even dabble in capital \"A\" Art again.\n    </p>\n    <h2>Tracking My Goals</h2>\n    <p>\n      I haven't decided how I'd like to track all of this yet. I'm leaning\n      towards posting a bimonthly update to my blog. That would count towards my\n      blogging goal, right??\n    </p>\n    <p>👋</p>\n  </BlogPage>\n);\n","summary":"A look at my accomplishments during the past year.","image":"https://mknepprath.com//assets/2019-in-review-1.png","date_published":"2019-12-29T15:00:00Z"},{"id":"https://mknepprath.com/writing/sequential-art","url":"https://mknepprath.com/writing/sequential-art","title":"Sequential Art™","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2019-12-12\",\n  summary: \"A comic retrospective.\",\n  image: \"/assets/comics-05.jpeg\",\n  title: \"Sequential Art™\"\n};\n\nexport default () => (\n  <BlogPage\n    dateTime={meta.publishedAt}\n    description={meta.summary}\n    ogImage={meta.image}\n    title={meta.title}\n  >\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n    <p>\n      Comics, both web and traditional, have been a fascination of mine for some\n      time. I wasn't brave enough to try my hand at creating them until I made a\n      discovery during{\" \"}\n      <a href=\"https://twitter.com/search?q=from%3A%40mknepprath%20%23inktober\">\n        #inktober\n      </a>{\" \"}\n      2017 - the best way to get over the fear of drawing is to use bold drawing\n      tools. I started with pencil, transitioned to pen, and eventually cracked\n      open a marker set. My resulting illustrations were as brazen as the\n      drawing tools I was using.\n    </p>\n    <img\n      alt=\"A pumpkin illustration\"\n      className=\"blog-image\"\n      src=\"/assets/comics-01.jpeg\"\n    />\n    <p></p>\n    <img\n      alt=\"A canoe illustration\"\n      className=\"blog-image\"\n      src=\"/assets/comics-02.jpeg\"\n    />\n    <p>\n      Last year, I decided to use this technique to draw some panels. I posted\n      my first comic as a reply to{\" \"}\n      <a href=\"https://twitter.com/JamesInks/status/1021770737877692422\">\n        @JamesInks\n      </a>\n      , a talented comic artist, as a gag. I believe I was planning on replying\n      to a bunch of tweets with comics, but I only ended up posting two in this\n      way.\n    </p>\n    <img\n      alt=\"Make comics. Who has time for that!\"\n      className=\"blog-image\"\n      src=\"/assets/comics-03.jpeg\"\n    />\n    <p>\n      The second was in reply to{\" \"}\n      <a href=\"https://twitter.com/JamesInks/status/1023671020560035842\">\n        a tweet about pie\n      </a>\n      .\n    </p>\n    <img\n      alt=\"I love pie!!!\"\n      className=\"blog-image\"\n      src=\"/assets/comics-04.jpeg\"\n    />\n    <p>\n      After this, I started{\" \"}\n      <a href=\"https://twitter.com/mknepprath/status/1024083111091597312\">\n        a thread\n      </a>{\" \"}\n      that now includes 19 short comics. This first one, <b>Sequential Art™</b>{\" \"}\n      was meant to be a light-hearted jab at the self-seriousness of some comic\n      artists.\n    </p>\n    <img\n      alt=\"Sequential art\"\n      className=\"blog-image\"\n      src=\"/assets/comics-05.jpeg\"\n    />\n    <p>\n      I tried my hand at social commentary for my 4th comic,{\" \"}\n      <b>Sequential Stress™</b>. These panels ended up being featured in Owen\n      Williams' (<a href=\"http://twitter.com/ow\">@ow</a>) article entitled, \"\n      <a href=\"https://char.gd/blog/2019/mobile-notifications-are-broken-its-time-to-fix-them\">\n        Notifications are broken. It's time to fix them.\n      </a>\n      \"\n    </p>\n    <img\n      alt=\"Sequential stress\"\n      className=\"blog-image\"\n      src=\"/assets/comics-06.jpeg\"\n    />\n    <p>\n      At this point, I was attempting to create at least one comic per day, so\n      the subject matter turned to trivial things I was dealing with. Like bugs.\n    </p>\n    <img\n      alt=\"Demon bug!!\"\n      className=\"blog-image\"\n      src=\"/assets/comics-07.jpeg\"\n    />\n    <p>And exercise.</p>\n    <img\n      alt=\"Apple Watch activity rings\"\n      className=\"blog-image\"\n      src=\"/assets/comics-08.jpeg\"\n    />\n    <p>\n      There was a third panel here that turned out bad, so I cut it off. I\n      enjoyed this two-panel reaction shot enough to post it despite that.\n    </p>\n    <img\n      alt=\"I will say nothing\"\n      className=\"blog-image\"\n      src=\"/assets/comics-09.jpeg\"\n    />\n    <p>\n      Most of my comics didn't warrant a title. Perhaps this one didn't, either,\n      but I decided to include it for some additional context.\n    </p>\n    <img\n      alt=\"Flat La Croix\"\n      className=\"blog-image\"\n      src=\"/assets/comics-10.jpeg\"\n    />\n    <p>My son and I take pictures of our silly faces sometimes.</p>\n    <img\n      alt=\"Silly faces\"\n      className=\"blog-image\"\n      src=\"/assets/comics-11.jpeg\"\n    />\n    <p>\n      My hairstyle was in transition during this time. I did a few quick studies\n      to nail how I wanted to portray it on the page.\n    </p>\n    <img alt=\"Hair study\" className=\"blog-image\" src=\"/assets/comics-12.jpeg\" />\n\n    <p>\n      While simple, this is the first one where I played with the perspective.\n      Perhaps a sequel is warranted, \"honk.\"\n    </p>\n    <img alt=\"Duck\" className=\"blog-image\" src=\"/assets/comics-13.jpeg\" />\n\n    <p>\n      The goal of this study was to illustrate butterflies at various levels of\n      resolution in interesting ways. Note that they become hearts as they fade\n      into the distance.\n    </p>\n    <img\n      alt=\"Butterflies\"\n      className=\"blog-image\"\n      src=\"/assets/comics-14.jpeg\"\n    />\n\n    <p>Again, hair transition issues.</p>\n    <img\n      alt=\"Hair problems\"\n      className=\"blog-image\"\n      src=\"/assets/comics-15.jpeg\"\n    />\n\n    <p>\n      Here, I attempted to portray a simple thing in comic form that couldn't\n      happen in reality.\n    </p>\n    <img\n      alt=\"Disappearing can\"\n      className=\"blog-image\"\n      src=\"/assets/comics-16.jpeg\"\n    />\n\n    <p>\n      Using line thickness and texture, I created a biopic about our RoboVac.\n    </p>\n    <img\n      alt=\"Robot vacuum\"\n      className=\"blog-image\"\n      src=\"/assets/comics-17.jpeg\"\n    />\n    <p>\n      After a brief hiatus, I came back to comics with a fresh perspective on my\n      previous panels. I had become too careful, and it was time to loosen up a\n      bit. This cat comic could be seen as a more feral version of the original\n      \"MAKE COMICS\" strip.\n    </p>\n    <img alt=\"RAAWRRRRR\" className=\"blog-image\" src=\"/assets/comics-18.jpeg\" />\n\n    <p>\n      These few comics were illustrated around Halloween 2018. I drew the candy\n      witch, a witch who trades a toy for candy.\n    </p>\n    <img\n      alt=\"Candy witch\"\n      className=\"blog-image\"\n      src=\"/assets/comics-19.jpeg\"\n    />\n\n    <p>I also found the idea of an angsty pumpkin hilarious.</p>\n    <img\n      alt=\"Angsty pumpkin\"\n      className=\"blog-image\"\n      src=\"/assets/comics-20.jpeg\"\n    />\n\n    <p>\n      This started out as a hand study, but resulted in one of my favorite\n      strips - more realistic with multiple perspectives. There is a nostalgia\n      to it, as well. I haven't gone fishing in years, if not decades.\n    </p>\n    <img\n      alt=\"Contemplative fisherman\"\n      className=\"blog-image\"\n      src=\"/assets/comics-21.jpeg\"\n    />\n\n    <p>\n      Back to the Halloween theme, I thought it would be fun to illustrate a\n      dragon - with a twist. It was my son's costume all along.\n    </p>\n    <img\n      alt=\"Dragon costume\"\n      className=\"blog-image\"\n      src=\"/assets/comics-22.jpeg\"\n    />\n\n    <p>Finally, too much caffeine!</p>\n    <img\n      alt=\"Coffee high\"\n      className=\"blog-image\"\n      src=\"/assets/comics-23.jpeg\"\n    />\n    <p>\n      I had a lot of fun with these, and I hope to do more. My main takeaway\n      from the project is that I can (and should) impose constraints upon myself\n      to yield the results I'm looking for. I wanted to create quick, rough\n      comics - the best tool for the job ended up being a big ol' Sharpie (and a\n      few other markers for color). Many of my comics are bold and dynamic\n      because it's hard to do otherwise with the tools I was using. That wasn't\n      an accident.\n    </p>\n  </BlogPage>\n);\n","summary":"A comic retrospective.","image":"https://mknepprath.com//assets/comics-05.jpeg","date_published":"2019-12-12T15:00:00Z"},{"id":"https://mknepprath.com/writing/design-process","url":"https://mknepprath.com/writing/design-process","title":"Thoughts on Design Process","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2019-09-07\",\n  summary: \"If I were to be asked to design an app, where would I start?\",\n  image: \"/assets/design-process.jpg\",\n  title: \"Thoughts on Design Process\"\n};\n\nexport default () => (\n  <BlogPage\n    dateTime={meta.publishedAt}\n    description={meta.summary}\n    ogImage={meta.image}\n    title={meta.title}\n  >\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <img\n      alt=\"Rubber duck\"\n      className=\"blog-image\"\n      src=\"/assets/design-process.jpg\"\n    />\n\n    <p>I was recently asked,</p>\n    <blockquote>\n      <p>\n        I’ve just finished reading what we’ll be using as a primer to UX/UI\n        design and it’s fairly good (I guess), but misses a few key bits of\n        information.\n      </p>\n      <p>\n        The author gives a good bit of basic theoretical information (what and\n        why), but assumes that the reader already knows the basics of the UX\n        design workflow (missing the HOW). Example: he’ll talk about heat maps\n        and eye tracking, but doesn’t care much about explaining the steps along\n        the way.\n      </p>\n      <p>\n        If I were to be asked to design an app from the ground up, or redesign a\n        substantial pre-existing website, where would I start? What are the\n        weigh stations along the way? Where would I introduce the information\n        architecture and what form(s) would it take along the way?\n      </p>\n    </blockquote>\n\n    <p>\n      Here are some of my meandering thoughts on the topic.{\" \"}\n      <a href=\"https://twitter.com/mknepprath\">Let me know</a> if I'm using any\n      industry jargon that needs further definition. P.S. I've <em>never</em>{\" \"}\n      used heat maps or eye tracking. 100% not necessary for version 1.0 of any\n      app.{\" \"}\n    </p>\n\n    <h2 id=\"1-research\">1. Research</h2>\n    <ul>\n      <li>\n        At Walmart Labs, this means lots of meetings with people who use the\n        website.\n      </li>\n      <li>\n        When working on a recent movie tracking app, I studied existing apps in\n        the space.\n      </li>\n    </ul>\n    <p>\n      The goal is to get a full understanding of how things currently work, and\n      what problems need to be addressed.\n    </p>\n\n    <h2 id=\"2-design-specification\">2. Design Specification</h2>\n    <p>\n      I consider this the most important step - a design spec is the source of\n      truth for everything related to the current project. I like to say it's a\n      living document; it gets revised and updated as roadblocks are discovered\n      and changes are made. Whenever any new \"artifact\" is created (writing,\n      mockups, etc), it gets referenced in this document. If an engineer has\n      questions about why part of the app or feature is designed a certain way,\n      they should be able to reference this document for the explanation. The\n      goal of creating this is to capture the full scope of the project and\n      answer as many potential questions as possible before building it.\n    </p>\n\n    <h2 id=\"3-wireframes\">3. Wireframes</h2>\n    <p>\n      Ideally, these are hand-drawn or put together in a design tool with simple\n      shapes - whatever format allows for quick iteration on the\n      layout/composition. At this point, it'd be good to start referencing the\n      guidelines for whichever platform is being designed for. For instance - if\n      this is going to be an Android app, then there's a decent chance the app\n      will need to adopt Android's built-in navigation buttons. This would\n      impact what navigation you'd include within the app. You'd also\n      potentially include a{\" \"}\n      <a href=\"https://material.io/components/buttons-floating-action-button/\">\n        FAB\n      </a>\n      . Android's guidelines are called{\" \"}\n      <a href=\"https://material.io/\">Material Design</a> and Apple's are called{\" \"}\n      <a href=\"https://developer.apple.com/design/human-interface-guidelines/\">\n        Human Interface Guidelines\n      </a>{\" \"}\n      or HIG.\n    </p>\n\n    <h2 id=\"4-mockups\">4. Mockups</h2>\n    <p>\n      Once I'm feeling good about the design spec and wireframes, and after\n      gathering feedback from my team, etc, I open Sketch and start building.\n      For the iOS app I worked on, I pulled in a library of HIG components and\n      started piecing together the app. Apple has a Resources page that includes\n      libraries of their components for a bunch of design apps,{\" \"}\n      <a href=\"https://developer.apple.com/design/resources/\">\n        including Sketch\n      </a>\n      . At this point, it's essentially like building with LEGO.\n    </p>\n    <p>\n      Note: This is not quite as simple on the web, since the web doesn't have a\n      set of guidelines like this - everyone kind of has to build them for\n      themselves. One of the apps I work on uses{\" \"}\n      <a href=\"https://getbootstrap.com/\">Bootstrap</a> and another uses{\" \"}\n      <a href=\"https://material-ui.com/\">Material UI</a>, which is a{\" \"}\n      <a href=\"https://reactjs.org/\">React</a> implementation of Material Design\n      for the web.\n    </p>\n\n    <h2 id=\"5-developer-feedback\">5. Developer Feedback</h2>\n    <p>\n      This may not deserve it's own step since I'd generally recommend gathering\n      feedback from developers along the way (also, I frequently am the\n      developer that ends up implementing what I designed), but at some\n      companies, this is considered the point at which the design is \"thrown\n      over the wall.\" Developers put together a technical specification, which\n      is similar to the design spec - except it gets into the weeds about what\n      needs to get built, how it should be built, what data will be necessary,\n      API endpoints... etc. They often discover limitations that were unknown\n      during the design phase that then need to get applied to the designs, so\n      there can be some back and forth here.\n    </p>\n\n    <h2 id=\"bonus-thoughts\">Bonus Thoughts</h2>\n    <p>I think the biggest things I've learned semi-recently are -</p>\n    <ol>\n      <li>\n        Designers should be writing A LOT. First, mockups only tell half the\n        story (if that). Mockups are usually static, so it's not possible to see\n        how certain elements should act or interact. Behavior needs to be\n        written down. Second, when working in a company, designers are expected\n        to have put thought into why their designs are structured a certain way.\n        Writing is the best way to crystalize your thoughts and generate a\n        reference sheet for the choices made.\n      </li>\n      <li>\n        Designers can't work in a silo. It's impossible to solve a problem\n        without fully understanding the context, and they can't get that without\n        talking to people.\n      </li>\n    </ol>\n  </BlogPage>\n);\n","summary":"If I were to be asked to design an app, where would I start?","image":"https://mknepprath.com//assets/design-process.jpg","date_published":"2019-09-07T15:00:00Z"},{"id":"https://mknepprath.com/writing/breathe","url":"https://mknepprath.com/writing/breathe","title":"Code Should Breathe","content_text":"import Prism from \"prismjs\";\n\nimport BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  image: \"/assets/breathe-1.jpg\",\n  published: true,\n  publishedAt: \"2019-08-03\",\n  summary: \"What if we let our code breathe a little?\",\n  title: \"Code Should Breathe\"\n};\n\nclass Breathe extends React.Component {\n  componentDidMount() {\n    // Syntax highlighting needs to be triggered after the page is rendered.\n    // - TODO: Do this lesson again:\n    //   https://nextjs.org/learn/excel/lazy-loading-components\n    Prism.highlightAll();\n  }\n  render() {\n    return (\n      <BlogPage\n        dateTime={meta.publishedAt}\n        description={meta.summary}\n        ogImage={meta.image}\n        title={meta.title}\n      >\n        <img\n          alt=\"A feather\"\n          className=\"blog-image\"\n          src={\"/assets/breathe-1.jpg\"}\n        />\n\n        <header>\n          <h1>{meta.title}</h1>\n        </header>\n\n        <p>\n          <em>\n            Note: This is my opinion. If you have thoughts or concerns, that's\n            fine - feel free to{\" \"}\n            <a href=\"https://twitter.com/mknepprath\">message me</a>.\n          </em>\n        </p>\n\n        <p>\n          In programming, there can be an obsession with brevity, compactness\n          and cleverness (i.e. magic). How much can I do in one line? How few\n          lines can I have in my component? How much can I abbreviate my\n          variable names? All of this leads to the code equivalent of\n          hyperventilation.\n        </p>\n        <p>\n          What if we let our code breathe a little? \"Breathing room\" here is\n          defined as extra lines and empty space within code. Here are a couple\n          ways this can be accomplished.\n        </p>\n\n        <h2 id=\"use-blank-lines-to-create-sections\">\n          Use Blank Lines To Create Sections\n        </h2>\n        <p>\n          A List Apart had a great article about the use of whitespace in web\n          design entitled simply,{\" \"}\n          <a href=\"http://alistapart.com/article/whitespace/\">Whitespace</a>.\n          This piece refers to a concept called <b>active whitespace</b>,\n          \"whitespace added to a composition to better emphasize or structure,\n          information.\" In code, use whitespace (blank lines) to clearly\n          separate imports, methods, and so on. Here's an example from this\n          website:\n        </p>\n        <pre>\n          <code className=\"language-javascript\">\n            {`\n  // External\n  import parseISO from \"date-fns/parseISO\";\n  import Link from \"next/link\";\n  import { withRouter } from \"next/router\";\n\n  // Components\n  import Page from \"core/page\";\n\n  // Data\n  import posts from \"data/posts\";\n\n  class Writing extends React.Component {\n    ...\n              `}\n          </code>\n        </pre>\n        <p>\n          And, of course, there are examples of great whitespace usage in the\n          official React docs. See the code examples in the{\" \"}\n          <a href=\"https://reactjs.org/docs/state-and-lifecycle.html#adding-lifecycle-methods-to-a-class\">\n            Adding Lifecycle Methods to a Class\n          </a>{\" \"}\n          section. From the A List Apart article, \"[W]hitespace creates\n          breathing room and balance. It’s important.\"\n        </p>\n\n        <h2 id=\"lint-rules\">Lint Rules</h2>\n        <p>\n          If a lint rule exists that enforces adding more lines and space,\n          implement it. One example:{\" \"}\n          <a href=\"https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/html-closing-bracket-newline.md\">\n            vue/html-closing-bracket-newline\n          </a>\n          .{\" \"}\n        </p>\n        <pre>\n          <code className=\"language-markup\">\n            {`\n <!-- Example A: -->\n <p\n   id=\"foo\"\n   class=\"bar\">\n   baz\n </p>\n\n <!-- Example B: -->\n <p\n   id=\"foo\"\n   class=\"bar\"\n >\n   baz\n </p>\n              `}\n          </code>\n        </pre>\n        <p>\n          Given the two options above, <b>Example B</b> allows for more\n          breathing room. It's easier to understand at a glance. Multiply{\" \"}\n          <b>Example A</b> by a dozen elements with varying numbers of\n          attributes and it becomes increasingly difficult to see where\n          attributes end and text/nested elements begin. I propose that when\n          choosing between two lint rule options, always choose the one that\n          adds more lines and space.\n        </p>\n\n        <h2 id=\"close-blocks-clearly\">Close Blocks Clearly</h2>\n        <p>\n          While I do enjoy the simplicity of{\" \"}\n          <a href=\"https://pugjs.org/api/getting-started.html\">Pug</a>, the\n          template engine formerly known as Jade, I do believe some human\n          processing speed is lost due to the lack of closing tags.\n        </p>\n        <pre>\n          <code className=\"language-markup\">\n            {`\n<!-- Example A (Pug) -->\n.fancy-link\n\ta(href=\"/\")\n    | Home\n.fancy-link\n  a(href=\"/about\")\n    | About\n\n<!-- Example B -->\n<div class=\"fancy-link\">\n\t<a href=\"/\">\n\t\tHome\n\t</a>\n</div>\n<div class=\"fancy-link\">\n\t<a href=\"/about\">\n\t\tAbout\n\t</a>\n</div>\n              `}\n          </code>\n        </pre>\n        <p>\n          While I love the brevity of Pug here, I personally think there's too\n          much left to the imagination. Again, multiply <b>Example A</b> by a\n          dozen different nested elements and it becomes dense and difficult to\n          parse.\n        </p>\n\n        <h2 id=\"breathe\">Breathe!</h2>\n        <p>\n          On a fun website called <a href=\"https://www.dwitter.net\">Dwitter</a>,\n          contributors are challenged to see what they can create with 140\n          characters (or less) of JavaScript. While limiting characters can be a\n          fun constraint, this isn't code I want to read on a day-to-day basis.\n          Instead, let's luxuriate in the fact that we have room to breathe.{\" \"}\n        </p>\n\n        <a href=\"https://twitter.com/mknepprath/status/1057477764033458181?s=20\">\n          <img\n            alt=\"Fishing\"\n            className=\"blog-image\"\n            src=\"/assets/breathe-2.jpg\"\n          />\n        </a>\n      </BlogPage>\n    );\n  }\n}\n\nexport default Breathe;\n","summary":"What if we let our code breathe a little?","image":"https://mknepprath.com//assets/breathe-1.jpg","date_published":"2019-08-03T15:00:00Z"},{"id":"https://mknepprath.com/writing/create-a-website","url":"https://mknepprath.com/writing/create-a-website","title":"Create a Simple Website with GitHub Pages","content_text":"import Prism from \"prismjs\";\n\nimport BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2019-07-22\",\n  summary: \"A quick guide for setting up a new website with GitHub.\",\n  image: \"/assets/create-a-website1.jpg\",\n  title: \"Create a Simple Website with GitHub Pages\"\n};\n\nclass CreateAWebsite extends React.Component {\n  componentDidMount() {\n    // Syntax highlighting needs to be triggered after the page is rendered.\n    // - TODO: Do this lesson again:\n    //   https://nextjs.org/learn/excel/lazy-loading-components\n    Prism.highlightAll();\n  }\n  render() {\n    return (\n      <BlogPage\n        dateTime={meta.publishedAt}\n        description={meta.summary}\n        ogImage={meta.image}\n        title={meta.title}\n      >\n        <img\n          alt=\"Illustration of a browser window\"\n          className=\"blog-image\"\n          src=\"/assets/create-a-website1.jpg\"\n        />\n\n        <header>\n          <h1>{meta.title}</h1>\n        </header>\n\n        <p>\n          GitHub offers a free way to host websites called{\" \"}\n          <a alt=\"Illustration of Octocat\" href=\"https://pages.github.com/\">\n            GitHub Pages\n          </a>\n          .\n        </p>\n\n        <h2>Requirements</h2>\n        <ul>\n          <li>\n            A GitHub account. Sign up here:{\" \"}\n            <a href=\"https://github.com/join\">https://github.com/join</a>\n          </li>\n          <li>That's it!</li>\n        </ul>\n\n        <img\n          alt=\"Octocat's face\"\n          className=\"blog-image\"\n          src=\"/assets/create-a-website2.jpg\"\n        />\n\n        <h2>Create a Repository</h2>\n        <p>\n          A GitHub Repository (repo) is where you store your code for a specific\n          project. For instance, the code for my personal website is stored in a\n          repo. Feel free to reference the GitHub Help{\" \"}\n          <a href=\"https://help.github.com/en/articles/create-a-repo\">\n            Create a repo\n          </a>{\" \"}\n          page.\n        </p>\n        <ol>\n          <li>\n            Click the \"+\" icon at the top right and select <b>New repository</b>\n            .\n          </li>\n          <li>\n            Type in a <b>Repository name</b>.\n          </li>\n          <li>\n            Click <b>Create repository</b>.\n          </li>\n        </ol>\n\n        <h2>Build Your Website</h2>\n        <p>\n          You are now on the main page of your new repo. For now, you can ignore\n          everything on this page except where it says \"Get started by creating\n          a new file...\"\n        </p>\n        <ol>\n          <li>\n            Click <b>creating a new file</b>.\n          </li>\n          <li>\n            Where it says <b>Name your file...</b>, enter{\" \"}\n            <code className=\"language-text\">index.html</code>.\n          </li>\n          <li>\n            Populate the page with some HTML. See <b>index.html Example</b>{\" \"}\n            below.\n          </li>\n          <li>\n            Click <b>Commit new file</b> at the bottom.\n          </li>\n        </ol>\n\n        <h2>index.html Example</h2>\n        <pre>\n          <code className=\"language-markup\">\n            {`\n  <!DOCTYPE html>\n  <html lang=\"en\">\n    <head>\n      <meta charset=\"utf-8\">\n      <title>My New Website</title>\n    </head>\n\n    <body>\n      <h1>Welcome!</h1>\n    </body>\n  </html>\n              `}\n          </code>\n        </pre>\n\n        <img\n          alt=\"Illustration of rocketship\"\n          className=\"blog-image\"\n          src=\"/assets/create-a-website3.jpg\"\n        />\n\n        <h2 id=\"deploy-your-website\">Deploy Your Website</h2>\n        <p>\n          You should be back on the main page of your repo, and you should see\n          the new <code className=\"language-text\">index.html</code> file you\n          created.\n        </p>\n        <ul>\n          <li>\n            Go to <b>Settings</b> at the top right.\n          </li>\n          <li>\n            Scroll all the way down to the <b>GitHub Pages</b> section - it will\n            now display a URL that looks similar to this:\n            https://github.com/username/example-site.\n          </li>\n          <li>Click on it to see your website.</li>\n        </ul>\n\n        <h2>Add a Custom Domain</h2>\n        <p>\n          Under the <b>GitHub Pages</b> section, there is a <b>Custom domain</b>{\" \"}\n          section.\n        </p>\n        <ul>\n          <li>Enter the domain you purchased into that field.</li>\n          <li>\n            On the domain provider side of things, GitHub provides{\" \"}\n            <a href=\"https://help.github.com/en/articles/setting-up-an-apex-domain\">\n              some guidance here\n            </a>\n            . It's different for every provider, but it comes down to setting\n            some records.\n          </li>\n        </ul>\n      </BlogPage>\n    );\n  }\n}\n\nexport default CreateAWebsite;\n","summary":"A quick guide for setting up a new website with GitHub.","image":"https://mknepprath.com//assets/create-a-website1.jpg","date_published":"2019-07-22T15:00:00Z"},{"id":"https://mknepprath.com/writing/creating-lilt-part-5","url":"https://mknepprath.com/writing/creating-lilt-part-5","title":"Creating Lilt — Part 5","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2016-05-17\",\n  title: \"Creating Lilt — Part 5\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      I am beyond pleased to announce the official launch of{\" \"}\n      <a href=\"http://twitter.com/familiarlilt\">\n        Lilt: A Twitter Text Adventure\n      </a>\n      . Join the adventure by tweeting ‘start’ at the Lilt Twitter account,\n      <a href=\"http://twitter.com/familiarlilt\">@FamiliarLilt</a>!\n    </p>\n\n    <h2>What Is Lilt?</h2>\n    <p>\n      Lilt is a modern twist on the text adventures of old, many/most of which\n      were created before I was born. Fortunately, I didn’t miss out on this\n      genre thanks to{\" \"}\n      <a href=\"http://www.homestarrunner.com/sbemail94.html\">\n        Strong Bad Email\n      </a>\n      ’s <a href=\"http://www.homestarrunner.com/dungeonman.html\">Dungeonman</a>.\n    </p>\n    <p>\n      While I feel that Lilt is very traditional in its gameplay, there is one\n      advantage it has that past games lacked — the Internet. By building on top\n      of Twitter’s API, I’ve been able to build a more social and cooperative\n      text adventure than was previously possible. Players are able to see what\n      their friends are doing in-game and give each other items. Eventually they\n      may have to work together to solve puzzles, defeat enemies, complete\n      missions, and so on.\n    </p>\n    <p>\n      A major part of Lilt that has not yet been fully explored is the ability\n      for players themselves to add to Lilt. I have been listening to some\n      Dungeons & Dragons podcasts lately (specifically The Adventure Zone), and\n      I love the idea of letting the game grow organically through player\n      exploration. I’ll go more into how I’m going to make this possible below,\n      where I outline a new Twitter account I’ve created:{\" \"}\n      <a href=\"http://twitter.com/liltbuilder\">@liltbuilder</a>.\n    </p>\n\n    <h2>Why Twitter, Though?</h2>\n    <p>\n      Twitter has it’s limitations — the obvious one being the 140-character\n      limit. While many text adventures seem to thrive on the ability to pile on\n      the exposition, I’ve decided to embrace the forced brevity, and I believe\n      Lilt is better for it. Being forced to say as much as possible in as few\n      words as possible has lead to concise and clear responses from Lilt. That\n      being said, Twitter has been easing up on this limitation, and therefore\n      me,{\" \"}\n      <a href=\"http://www.bloomberg.com/news/articles/2016-05-16/twitter-to-stop-counting-photos-and-links-in-140-character-limit\">\n        by the day\n      </a>\n      .\n    </p>\n    <p>\n      For a few more reasons, I go into it a bit further in{\" \"}\n      <a href=\"https://mknepprath.com/writing/creating-lilt-part-1\">\n        Part 1 of this series.\n      </a>\n    </p>\n\n    <h2>New Features</h2>\n    <p>\n      I made a lot of additions to Lilt since{\" \"}\n      <a href=\"https://mknepprath.com/writing/creating-lilt-part-4\">\n        Creating Lilt — Part 4\n      </a>\n      , including a few more Twitter accounts, refactoring, and other technical\n      changes.\n    </p>\n    <ol>\n      <li>\n        <a href=\"http://twitter.com/liltbuilder\">@liltbuilder</a> — I made a few\n        major updates to Lilt, and this is one of them. This account has been\n        given powers far beyond the normal player, including the ability to add\n        new moves, responses, items, events, and more to Lilt. In fact, Builder\n        is essentially able to communicate directly with the Lilt database\n        through a protocol I built that translates tweets into PostgreSQL\n        statements and queries. Builder’s tweets are processed before any player\n        tweets, allowing me to catch any player moves I know won’t work. For\n        example, if a player were to run into a forest (@familiarlilt run\n        through the forest), and I’d never considered the possibility — I can\n        choose to add it as an option right then (@player You run through the\n        forest until you find a clearing. There, you meet a fox.). Once I’ve\n        added it, the option is there for if/when any future players attempt to\n        do the same. In this way, I hope to build Lilt organically, like a\n        large-scale game of Dungeons & Dragons.\n      </li>\n      <li>\n        <a href=\"http://twitter.com/lilt_bird\">@lilt_bird</a> — This is just one\n        example of a player-controlled in-game character. While this blue bird\n        is a character in the game, it’s currently controlled entirely by me. I\n        hope to eventually have many characters like this, some of which will\n        either be controlled by myself, trusted friends, or may even be bots\n        themselves.\n      </li>\n      <li>\n        Lastly, Lilt underwent a major refactoring over the last couple weeks to\n        make it easier for myself to manage and update when needed. I won’t get\n        too deep into the weeds, but the main goal was for it to be easier to\n        handle moves that called for a more complicated,\n        algorithmically-generated response, such as ‘inventory,’ ‘delete me from\n        Lilt,’ or ‘give @rrhoover an apple.’\n      </li>\n    </ol>\n\n    <h2>Outro</h2>\n    <p>\n      While I’m excited to see where Lilt goes from here, I’m personally proud\n      of what I’ve accomplished with it thus far. When I was first brainstorming\n      about the game, I had no experience with bots, the Twitter API, or Python\n      — and I doubt I had even heard of Heroku or PostgreSQL. I wasn’t sure if\n      building Lilt how I wanted to build it would be technically possible. I’m\n      glad to have gained the experience, and look forward to building a world\n      with you and everyone else who gives Lilt a shot.\n    </p>\n    <p>Thank you!</p>\n    <p>Michael</p>\n  </BlogPage>\n);\n","date_published":"2016-05-17T15:00:00Z"},{"id":"https://mknepprath.com/writing/creating-lilt-part-4","url":"https://mknepprath.com/writing/creating-lilt-part-4","title":"Creating Lilt — Part 4","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2016-03-20\",\n  title: \"Creating Lilt — Part 4\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      As you may have seen in the addendum to{\" \"}\n      <a href=\"http://mknepprath.com/writing/creating-lilt-part-3\">Part 3</a>, I\n      had quite the wrench thrown into this project. One of the main tools I had\n      become heavily invested in, <a href=\"http://parse.com/\">Parse</a>,\n      <a href=\"http://blog.parse.com/announcements/moving-on\">\n        {\" \"}\n        announced that they’d be shutting down\n      </a>{\" \"}\n      in early 2017. Luckily, this is a side project that hadn’t been launched\n      yet, so I can’t complain too much — my sympathies to those who had far\n      more riding on the service.\n    </p>\n\n    <h2>Robot M. Knepprath</h2>\n    <p>\n      Serendipitously, I was inspired to{\" \"}\n      <a href=\"http://readwrite.com/2014/06/20/random-non-sequitur-twitter-bot-instructions\">\n        build a simple ebooks Twitterbot\n      </a>{\" \"}\n      around that time: <a href=\"https://twitter.com/robot_mk\">@robot_mk</a>.\n      This ended up being the springboard that launched me into building out the\n      actual functioning game, instead of the prototype I had been working on\n      previously. This bot was written in Python, deployed through Heroku, and\n      utilizes{\" \"}\n      <a href=\"https://github.com/bear/python-twitter\">python-twitter</a> to\n      work with Twitter’s API. I made some minor modifications to this bot to\n      get a handle on how it was structured, then attempted to clone it and\n      frankenstein the functionality I needed into it. This ended up being a bad\n      idea — I would have needed to rip out all of the old logic anyway, so I\n      decided to start fresh.\n    </p>\n\n    <h2>Liltbot</h2>\n    <p>\n      The new Lilt Twitterbot is written in Python (requiring me to rewrite all\n      of what I’d written in JavaScript for the prototype), and deployed through\n      Heroku like my ebooks bot. Instead of python-twitter, I’m using{\" \"}\n      <a href=\"http://www.tweepy.org\">Tweepy</a> to communicate with Twitter’s\n      API. I was having a hard time figuring out how to get Twitter mentions\n      with python-twitter, which was the main functionality I’d need for Lilt.\n      Tweepy has made that a very simple process.\n    </p>\n\n    <h2>What About Parse?</h2>\n    <p>\n      Since I was rewriting my game anyway (JS to Python), I’ve been working on\n      building in some required features (ability to support more than one\n      player at a time), and wish list features (a better item management\n      system). I first had to select a replacement for Parse, so I chose one\n      that was already well integrated into Heroku:{\" \"}\n      <a href=\"http://www.postgresql.org\">Postgresql</a>. It’s not as pretty or\n      easy to work with (considering you work with it pretty much entirely\n      through the command line), but it hasn’t been all that bad, either.\n    </p>\n    <p>\n      So far, I have three tables: Users, Items, and Moves. Moves serves the\n      exact same purpose as the Moves table in Parse described in{\" \"}\n      <a href=\"http://mknepprath.com/writing/creating-lilt-part-3\">Part 3</a>,\n      so I won’t cover that again — but I’ll give an overview of the other two:\n    </p>\n    <ol>\n      <li>\n        Users: When someone tweets at Lilt, Liltbot will get that tweet and grab\n        their username, id, the id of that tweet, the tweet text, and initiate\n        the position and inventory for that person. I can take a deep dive later\n        into how the inventory is currently working, but it’s basically a string\n        of json that stores dynamic item traits, like quantity.\n      </li>\n      <li>\n        Items: This table contains all static item traits, like limits for how\n        many one can carry, or how much a particular item would heal you, and so\n        on.\n      </li>\n    </ol>\n    <img\n      alt=\"Postgresql table displaying users\"\n      className=\"blog-image\"\n      src=\"/assets/creating-lilt-part-4-1.png\"\n    />\n\n    <h2>Gameplay Example</h2>\n    <p>\n      So what’s possible so far? Here’s an example of an interaction I’ve had\n      with Liltbot after I’d already picked up a few items:\n    </p>\n    <blockquote>\n      <p>Me: @familiarlilt inventory</p>\n      <p>Liltbot: @mknepprath apple •••, rock, banana •••</p>\n      <p>\n        M: @familiarlilt pick up BANANA…… (sidenote: Liltbot cleans up the tweet\n        so it’s more readable, so this one would be read as ‘pick up banana’)\n      </p>\n      <p>L: @mknepprath You acquired a banana.</p>\n      <p>M: @familiarlilt INVENTORY!!!!!!</p>\n      <p>L: @mknepprath banana ••••, apple •••, rock</p>\n      <p>M: @familiarlilt look around</p>\n      <p>L: @mknepprath It’s pretty neat in here.</p>\n    </blockquote>\n    <p>\n      Very excited about how far along this has come in the last couple months.\n      I’m hoping to launch a playable version of Lilt relatively soon — can’t\n      wait for all of you to jump in and play.\n    </p>\n    <p>\n      If you have any questions or suggestions,{\" \"}\n      <a href=\"https://twitter.com/mknepprath\">tweet at me</a>!\n    </p>\n  </BlogPage>\n);\n","date_published":"2016-03-20T15:00:00Z"},{"id":"https://mknepprath.com/writing/creating-lilt-part-3","url":"https://mknepprath.com/writing/creating-lilt-part-3","title":"Creating Lilt — Part 3","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2016-01-27\",\n  title: \"Creating Lilt — Part 3\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      Work has begun on a prototype of Lilt, and I thought it’d be fun to go\n      through the steps I’ve taken to build it out so far. Disclaimer, if you\n      want to play the game spoiler-free… don’t read this, but do{\" \"}\n      <a href=\"https://twitter.com/mknepprath\">hit me up on Twitter</a>. Let’s\n      jump in!\n    </p>\n    <img\n      alt=\"Lilt prototype\"\n      className=\"blog-image\"\n      src=\"/assets/creating-lilt-part-3-1.png\"\n    />\n\n    <h2>The Interface</h2>\n    <p>\n      One quick reminder — this game will be played through Twitter in its final\n      form, so I purposely spent very little time on this interface (and yet\n      still more than I should have). You enter your “tweet” into the field on\n      the left and it gets appended to the list on the right, along with the\n      response from the game. I built it with{\" \"}\n      <a href=\"http://getbootstrap.com\">Bootstrap</a>. Simple!\n    </p>\n\n    <h2>The Engine — Phase 1</h2>\n    <blockquote>\n      <p>“Big things have small beginnings.” — David</p>\n    </blockquote>\n    <p>\n      Small beginnings, indeed — you can view an early draft of{\" \"}\n      <a href=\"https://gist.github.com/mknepprath/96b9944d055de23345ee\">\n        my game.js file here\n      </a>\n      . Allow me to define a few concepts below.\n    </p>\n    <p>\n      <b>Position:</b> At the most basic level, if you want to interact with\n      things in a certain place, you need to be positioned there. There are two\n      locations so far: “start,” and “cell.”\n    </p>\n    <p>\n      <b>Move:</b> This is a cleansed version of your input. You could enter\n      “Start!” or “START” or “start…” but in all of these cases, your move will\n      be “start”.\n    </p>\n    <p>\n      <b>Response:</b> Once you make your move, this is what the game responds\n      with.\n    </p>\n    <p>\n      So, let’s say you’ve decided to “Open the door” while in the “cell.”\n      Looking at the <b>#tweet</b> function in the game.js file, your{\" \"}\n      <b>tweet</b> gets assigned to <b>move</b> as “open the door”. Because your\n      location is “cell,” the game skips “start” and looks for “open the door”\n      under the “cell” if/else statement. Once it’s found, it assigns the proper\n      response, “Surprise, no can do,” to <b>response</b>. Finally, the original{\" \"}\n      <b>tweet</b> and <b>response</b> are appended to the list (.command) on\n      the right. You might notice that there is no other logic — no way to\n      interact with objects, or win. That’s coming, I promise!\n    </p>\n\n    <h2>The Engine — Phase 2</h2>\n    <p>\n      A few major features were added in{\" \"}\n      <a href=\"https://gist.github.com/mknepprath/f723588d559048e05df2\">\n        this revision\n      </a>\n      .\n    </p>\n    <p>\n      <b>Cookies:</b> I used{\" \"}\n      <a href=\"https://github.com/js-cookie/js-cookie\">JavaScript Cookie</a> to\n      add the ability to continue where you left off in the game, even if you\n      closed the tab or turned off your computer. It was a small win that will\n      be useful for me while building this prototype, and was fairly easy to\n      implement, so I went for it. You’ll see logic at the beginning of game.js\n      that checks to see if a cookie exists, and then calls it or creates a new\n      one based on that result. Towards the end, you’ll see where the cookies\n      get updated after each move, or deleted if the game is reset.\n    </p>\n    <p>\n      <b>Interactions:</b> You may see some random variables sprinkled around\n      the responses, such as <b>key_pasted</b> and <b>key_acquired</b>. The game\n      keeps track of what you’ve completed with these so that you can\n      successfully do things like “open the door” once you’ve acquired the key.\n    </p>\n    <p>\n      <b>Comments:</b> Now that game.js is getting to be bigger and more\n      confusing, I’ve started to add comments to clarify what different tasks\n      are being handled. I get even more thorough than this as time passes —\n      they’ve been extremely helpful during this process.\n    </p>\n\n    <h2>The Engine — Phase 3</h2>\n    <p>\n      You may have noticed that all of the if statements were getting a bit out\n      of hand, and not very{\" \"}\n      <a href=\"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself\">DRY</a>.\n      Phase 3 is where I decided to take care of that and move all of my data\n      (positions, moves, responses) into <a href=\"http://parse.com/\">Parse</a>.\n      Despite the number of possible moves in Lilt increases by 5x, I was able\n      to cut{\" \"}\n      <a href=\"https://gist.github.com/mknepprath/d3228826c3cedc61d4f9\">\n        my game.js file in half\n      </a>\n      , from 280 lines to 137.\n    </p>\n    <img\n      alt=\"Moves and responses in Parse\"\n      className=\"blog-image\"\n      src=\"/assets/creating-lilt-part-3-2.png\"\n    />\n    <p>\n      So, let’s try to “open the chest” while in the “cell.” When the game was\n      loaded previously, the data for <b>moves</b> and <b>interactions</b> were\n      fetched from Parse. Clicking the Tweet button immediately logs your{\" \"}\n      <b>tweet</b> to the list on the right. It then loops through all of the\n      moves gathered from Parse until it finds one that matches your{\" \"}\n      <b>tweet</b> (“open the chest”).\n    </p>\n    <img\n      alt=\"Interactions in Parse\"\n      className=\"blog-image\"\n      src=\"/assets/creating-lilt-part-3-3.png\"\n    />\n    <p>\n      Once a match is found, it replies with the corresponding <b>response</b>{\" \"}\n      (“There’s a coin in it.”), and triggers any <b>interactions</b>{\" \"}\n      (chestopen) associated it. It will also change your position, although\n      there is only one instance where this is necessary so far — when you tweet\n      “start” at the beginning of the game.\n    </p>\n\n    <h2>What's Next</h2>\n    <p>\n      Dumping all of the moves into Parse has been a big help, but it’s still\n      unwieldy dealing with all of that data. I’ve begun work on an admin\n      interface that will help with managing all of it.\n    </p>\n    <p>\n      I’m also not pleased with how certain items are being handled, such as the\n      coin and the key. I’d prefer that there were some logic in place where you\n      could be carrying them in an inventory.\n    </p>\n    <p>\n      Got questions or want to try to play through this prototype?{\" \"}\n      <a href=\"https://twitter.com/mknepprath\">Hit me up on Twitter!</a>\n    </p>\n    <p>\n      Update 1/28:{\" \"}\n      <a href=\"http://bits.blogs.nytimes.com/2016/01/28/facebook-to-shut-down-parse-its-platform-for-mobile-developers\">\n        Well, this certainly complicates a few things.\n      </a>\n    </p>\n  </BlogPage>\n);\n","date_published":"2016-01-27T15:00:00Z"},{"id":"https://mknepprath.com/writing/creating-lilt-part-2","url":"https://mknepprath.com/writing/creating-lilt-part-2","title":"Creating Lilt — Part 2","content_text":"import Prism from \"prismjs\";\n\nimport BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2016-01-21\",\n  title: \"Creating Lilt — Part 2\"\n};\n\nclass CreatingLiltPart2 extends React.Component {\n  componentDidMount() {\n    // Syntax highlighting needs to be triggered after the page is rendered.\n    // - TODO: Do this lesson again:\n    //   https://nextjs.org/learn/excel/lazy-loading-components\n    Prism.highlightAll();\n  }\n  render() {\n    return (\n      <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n        <header>\n          <h1>{meta.title}</h1>\n        </header>\n\n        <p>\n          Now that I’ve been working on this game for a month or so, it’s time\n          to share some of my progress. I knew that writing the story for this\n          game was going to be a challenge, but I had not realized that I’d\n          first have to overcome a equally challenging prerequisite — figuring\n          out how to write this story.\n        </p>\n        <p>\n          Not to downplay the challenges of writing a good novel — but at the\n          most basic level, books are a long string of carefully curated words.\n          There are tons of tools out there for organizing, formatting, and\n          correcting these words, but not much out there for what I was planning\n          to do. My story would be 3D, 4D, or even RealD when compared to the\n          flatness of a book.\n        </p>\n        <p>So, without further ado,</p>\n\n        <h2>Attempt #1:</h2>\n        <p>\n          I’m clumping together a few similar attempts I tried here: lists. I\n          had lists in Google Docs, lists in{\" \"}\n          <a href=\"http://realmacsoftware.com/clear\">Clear</a>, lists in a\n          notebook… but none of these seemed to suffice. It became obvious that\n          for a multi-dimensional story like Lilt, I’d need a multi-dimensional\n          tool.\n        </p>\n\n        <h2>Attempt #2</h2>\n        <p>Lists in lists.</p>\n        <pre>\n          <code className=\"language-markup\">\n            {`\n<ul>Tweet \"start\" to begin.\n  <li>start\n    <ul>You are resting in a glade. There is a waterfall to your right and a pathway to your left. What will you do?\n      <li>walk down the path | walk down the pathway | take the path | walk the path\n        <ul>You walk down the path but soon realize your way is blocked by a large felled tree. You walk back.\n        </ul>\n      <li>pick up the ladle | pick up the #ladle | pick up ladle | pick the #ladle\n            <ul>You now have a <b>#ladle</b>.\n            </ul>\n          </li>\n      </li>\n      <li>look at the waterfall\n        <ul>The water looks pure. There are beautiful koi fish swimming around in it.\n        </ul>\n      </li>\n      <li>drink from the waterfall\n        <ul>Something prevents you from touching the water with your hands. Perhaps you need a tool for that?\n        </ul>\n        <ul>(<b>#ladle</b>) You use the ladle to scoop up some water and drink it. You are now immortal.\n        </ul>\n      </li>\n      <li>\n      </li>\n    </ul>\n  </li>\n  <li>asdfgh\n    <ul>You can't do that yet.</ul>\n  </li>\n</ul>\n              `}\n          </code>\n        </pre>\n\n        <p>\n          I had the above list hosted on my site so I could view it as I updated\n          the html. This allowed me to map out the branches a player could take\n          as they made their way through the game. I also attempted to use{\" \"}\n          <a href=\"https://daringfireball.net/projects/markdown\">Markdown</a>,\n          which was a little better, but both ended up being to0 unwieldy and\n          neither could scale easily. I discovered over and over again how much\n          I had underestimated the amount of content I’d have to generate for\n          even a small, simple puzzle in this game.\n        </p>\n\n        <h2>Attempts #3</h2>\n        <p>\n          For this attempt, I decided I needed to start defining the space of\n          the first level of this game, and then see if a good system came to\n          light through that.\n        </p>\n        <img\n          alt=\"Drawing of The Room\"\n          className=\"blog-image\"\n          src=\"/assets/creating-lilt-part-2-1.png\"\n        />\n        <p>\n          To kick off this process, I had a friend over and quickly threw\n          together an illustration of a room in Google Docs, then we started\n          playing through some ideas. We compiled a list of all the objects in\n          this room, and generated a short list of possible interactions. We\n          also came up with the general path a player would need to follow to\n          advance.\n        </p>\n        <p>\n          It was this brainstorming session that lead me to the surprising\n          solution that I’ve been running with so far… a spreadsheet.\n        </p>\n        <img\n          alt=\"Screenshot of the Lilt spreadsheet\"\n          className=\"blog-image\"\n          src=\"/assets/creating-lilt-part-2-2.png\"\n        />\n        <p>\n          This allowed me to account for a vast majority of object/interaction\n          combinations with relative ease. The top row also includes an entire\n          section at the end for, “use X with Y,” for instance, “use X with\n          ants,” which would then be followed by a column of responses for “use\n          blanket with ants,” “use bucket with ants,” “use coin with ants,” and\n          so on.\n        </p>\n\n        <h2>Next Steps</h2>\n        <p>\n          Part 3 of this series will be coming soon, as I’ve started working on\n          a prototype, and it’s already playable. Hit me up on Twitter,\n          <a href=\"https://twitter.com/mknepprath\">@mknepprath</a>, if you’d\n          like to give it a shot!\n        </p>\n      </BlogPage>\n    );\n  }\n}\n\nexport default CreatingLiltPart2;\n","date_published":"2016-01-21T15:00:00Z"},{"id":"https://mknepprath.com/writing/creating-lilt-part-1","url":"https://mknepprath.com/writing/creating-lilt-part-1","title":"Creating Lilt — Part 1","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2015-11-21\",\n  title: \"Creating Lilt — Part 1\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      Roughly one year ago, I had an idea for a game that would be entirely\n      playable through Twitter. I don’t recall what sparked it, but the game\n      would be a text adventure where you’d tweet to the game’s Twitter account,\n      and it would respond with options for your next move. There are a few\n      reasons I thought (and still believe) Twitter would be the perfect\n      platform for this…\n    </p>\n\n    <h2>Why Twitter?</h2>\n    <ol>\n      <li>\n        Twitter hides tweets sent between two accounts unless you follow both\n        accounts, so your followers won’t get annoyed by you playing the game.\n        The tweets would be hidden.\n      </li>\n      <li>\n        On the flip side, if a few of your followers were also playing the game\n        and followed the game account (\n        <a href=\"https://twitter.com/familiarlilt\">@familiarlilt</a>), they\n        would see those tweets. It then becomes a great social experience, where\n        you’re all playing and figuring things out together.\n      </li>\n      <li>\n        Not long after I had the idea, Twitter released an update that separated{\" \"}\n        <b>Tweets</b> and <b>Tweets & replies</b> into separate tabs. This means\n        that your main Tweets feed won’t get bogged down with game tweets —\n        they’d only be visible under Tweets & replies.\n      </li>\n      <li>\n        Finally, Twitter is still{\" \"}\n        <a href=\"https://support.twitter.com/articles/14589\">\n          entirely usable through SMS\n        </a>\n        , meaning it can be played on any phone including old dumb phones.\n      </li>\n    </ol>\n\n    <h2>Gameplay</h2>\n    <p>\n      The big limitation with Twitter, that extends far beyond this game, is\n      tweet length. There are ways to circumvent this (e.g. images with text),\n      but I’ve decided to embrace the limitation. Here’s an example of a rough\n      early demo:\n    </p>\n    <blockquote>\n      <p>\n        @familiarlilt: You are resting in a glade. There is a waterfall to your\n        right and a strange statue to your left. What will you do?\n      </p>\n      <p>@mknepprath (me): look at waterfall</p>\n      <p>\n        @familiarlilt: The water looks pure. There are beautiful koi fish\n        swimming around in it.\n      </p>\n      <p>@mknepprath: drink from waterfall</p>\n      <p>\n        @familiarlilt: Something prevents you from touching the water with your\n        hands. Perhaps you need a tool for that?\n      </p>\n      <p>@mknepprath: look at statue</p>\n      <p>\n        @familiarlilt: The statue has an inscription that reads, “Fountain of\n        Youth.” There is a #ladle resting on the statue.\n      </p>\n    </blockquote>\n    <p>\n      I’m not sure how useful the hashtag is, especially considering how often\n      people have already used{\" \"}\n      <a href=\"https://twitter.com/search?q=%23ladle\">#ladle on Twitter</a> —\n      but I like the idea of using it as an indicator for things that can be\n      collected. Perhaps it would be more useful for more unique items or\n      achievements, so that you’d be able see what other players are doing when\n      clicking on it.\n    </p>\n    <p>\n      For the commands you send to @familiarlilt, my hope is to leave it open to\n      whatever people want to try. What works will usually be pretty\n      straight-forward, like “look at X” or “pick up Y,” but I would love to add\n      more to the game based on what people ask. An simple example — maybe the\n      game mentions a pond, but I didn’t plan anything for that pond beyond just\n      being a part of the setting. If a dozen people ask to “look at pond” or\n      “swim in pond,” I may consider adding an actual path to explore there.\n    </p>\n    <p>\n      I’m still thinking about how an inventory might be included and managed.\n      It would also be cool to incorporate some sort of trading system or places\n      that can only be accessed through cooperation with another player.\n    </p>\n    <p>\n      Oh, and I need to put together some art. I would love for there to be a\n      nice illustration for each item, achievement, and destination. All in good\n      time.\n    </p>\n\n    <h2>Onward</h2>\n    <p>\n      I’m in love with this crowdsourced text adventure D&D-like game, and I\n      can’t wait to get something together for all of you to try. I wrote this\n      so that I’d be held accountable for it, so please, give me crap until you\n      see some progress on this.\n    </p>\n    <p>\n      Before writing this, I did some searching to see if anything similar had\n      been done before. Here are a few.{\" \"}\n      <a href=\"https://www.twitter.com/140charADV\">@140charADV</a> wins the\n      award for being most similar and appearing long before I had the idea. Now\n      I’m going to play some{\" \"}\n      <a href=\"https://www.twitter.com/leonsintro\">@leonsintro</a>!\n    </p>\n    <ul>\n      <li>\n        <a href=\"https://twitter.com/YouAreCarrying\">@YouAreCarrying</a>\n      </li>\n      <li>\n        <a href=\"https://twitter.com/leonsintro\">@leonsintro</a>\n      </li>\n      <li>\n        <a href=\"https://www.twitter.com/140charADV\">@140charADV</a>\n      </li>\n      <li>\n        <a href=\"https://twitter.com/wnd_go\">@wnd_go</a>\n      </li>\n    </ul>\n  </BlogPage>\n);\n","date_published":"2015-11-21T15:00:00Z"},{"id":"https://mknepprath.com/writing/detective-comics","url":"https://mknepprath.com/writing/detective-comics","title":"How DC Is Failing Us All","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2015-04-29\",\n  title: \"How DC Is Failing Us All\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <img\n      alt=\"The Joker in a box office booth\"\n      className=\"blog-image\"\n      src=\"/assets/detective-comics.jpg\"\n    />\n\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      I love Batman. The Dark Knight was one of my favorite superhero films of\n      all time. I want to love Superman, and I want to believe that DC has the\n      characters and the talent to put out quality films with gripping stories\n      and incredible action.\n    </p>\n    <p>Regardless, prepare to get robbed.</p>\n    <p>\n      DC is in a great place. Marvel’s done all the legwork of putting together\n      a expansive, yet cohesive, cinematic universe. It’s all there — the\n      planning, the timing, the pacing… DC should be taking this roadmap and\n      improving upon it. They even have the perfect hook — <b>Batman</b>.\n      Instead, DC appears to be trying to copy Marvel as closely as it can.\n      Poorly.\n    </p>\n    <p>\n      Case in point: Zack Snyder. Snyder is not Whedon no matter how much DC\n      wants to put him in that role. I have to imagine the decision to put him\n      in charge was purely based on his ability to direct a cool action\n      sequence, and the fact that he’d directed Watchmen. Yes, it’s a dark\n      superhero ensemble film, and it was okay… But DC seems to have missed the\n      rest of his track record. Snyder films have style, and in the case of both\n      Watchmen and 300, this was their saving grace — and both borrowed heavily\n      from their graphic novel counterparts to fill in the story and character\n      development. But Snyder’s canary in the coal mine is Sucker Punch. Per\n      Rotten Tomatoes (which gave it a generous 23%):\n    </p>\n    <blockquote>\n      <p>\n        It’s technically impressive and loaded with eye-catching images, but\n        without characters or a plot to support them, all of Sucker Punch’s\n        visual thrills are for naught.\n      </p>\n    </blockquote>\n    <p>\n      Now replace “Sucker Punch” with “Man of Steel.” Now go ahead and replace\n      it with “Batman v Superman.” Snyder does style, big visuals, action, and…\n      not much else beyond that. This will yield us some cool superhero footage,\n      but will not give us the cohesive cinematic universe we want. What DC\n      needs is someone whose strengths lie in character development, working\n      with assemble casts… someone like Whedon. Hopefully they see that before\n      it’s too late.\n    </p>\n    <p>\n      Unfortunately, it may be too late very soon. DC is in a hurry to catch up\n      to Marvel — Batman v Superman will feature the two titular characters\n      along with Wonder Woman, Cyborg, Aquaman, Lex Luthor and countless other\n      minor characters. This film is DC’s Avengers, but unlike The Avengers,\n      most people aren’t going to know or care about these characters — and back\n      to Snyder’s weaknesses, we’re not going to get any character development\n      in this film to make up for the fact that there was no build up to it.\n    </p>\n    <p>\n      But hey, at least it’ll be fun, right? I wouldn’t be so sure about that,\n      either. DC seems to have doubled down on dark, gritty and serious. The\n      working theory is that DC’s detour into the bright and colorful, Green\n      Lantern, was a major flop, and their conclusion was that it was the fun\n      tone that caused the failure — not the fact that it was just a bad movie.\n      Whatever the reason, expect few jokes and even less fun.\n    </p>\n    <p>\n      None of this addresses the biggest problem, however. DC doesn’t have to do\n      anything about any of this, and they will still make a ton of money. This\n      sucks, because this means we, the fans, are the ones getting cheated.\n      They’ll lose our loyalty in the long run, but they’ll make bank in the\n      meantime. It doesn’t take a stretch of the imagination to see which one\n      they currently value more.\n    </p>\n  </BlogPage>\n);\n","date_published":"2015-04-29T15:00:00Z"},{"id":"https://mknepprath.com/writing/family-sharing","url":"https://mknepprath.com/writing/family-sharing","title":"The Significance of Family Sharing","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2014-06-04\",\n  title: \"The Significance of Family Sharing\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      Apple announced a new feature during WWDC called{\" \"}\n      <a href=\"http://www.apple.com/ios/ios8/family-sharing\">Family Sharing</a>{\" \"}\n      that will “bring harmony to your family’s digital life” by allowing up to\n      six users share apps they buy using the same credit card. This is a genius\n      play, but not all the reasons are obvious.\n    </p>\n    <p>\n      For one thing, people were sharing their Apple IDs with family and friends\n      to do this, anyway. While this caused some confusion within the accounts,\n      it was worth it to save some money through not having to buy the same app\n      for each family member. How Apple reacted to this behavior is telling —\n      rather than doing the obvious by trying to prevent people from “cheating\n      the system,” they’ve endorsed it by officially allowing family to share\n      apps among each other for free.\n    </p>\n    <p>\n      But isn’t this potentially cutting developers’ revenue by a significant\n      amount? No, and I believe the opposite could be true. It’s far easier to\n      justify buying an app for six people than one. Anyone sharing their ID\n      before will continue their current (and now sanctioned) behavior, while\n      those who weren’t may now consider buying apps that they wouldn’t have\n      otherwise.\n    </p>\n    <p>\n      This is also great for Apple, because now that they’ve officially\n      addressed customers’ desire to share apps, they’ve brought it into their\n      realm of control — and can build upon it. Work on this has already begun.\n      My favorite slide from the announcement of Family Sharing is pictured\n      above.\n    </p>\n    <p>\n      I love Family Sharing. It shows that Apple is very much in-touch with how\n      their platform is being used, is making smart decisions, and is willing to\n      make sacrifices for a better customer experience.\n    </p>\n  </BlogPage>\n);\n","date_published":"2014-06-04T15:00:00Z"},{"id":"https://mknepprath.com/writing/apples-future-wearable","url":"https://mknepprath.com/writing/apples-future-wearable","title":"Apple’s Future Wearable","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2014-04-29\",\n  title: \"Apple’s Future Wearable\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      I’d like to preface this post by saying everything being proposed here is\n      entirely speculation and may never see the light of day. Speculation is\n      fun, though – so let’s get into it.\n    </p>\n    <p>\n      Rumors of an Apple iWatch have been making the rounds for quite some time\n      now. I’d normally brush these aside due to lack of evidence, but a few\n      recent events have brought me back around to the idea.\n    </p>\n    <ol>\n      <li>\n        <a href=\"http://www.theverge.com/2013/4/23/4258272/apple-tim-cook-teases-exciting-new-product-category\">\n          Tim Cook has teased the possibility of new product categories this\n          fall.\n        </a>{\" \"}\n        This, in it of itself, does not imply a wearable is on the way. He could\n        be referring to the rumored bigger iPhone. Or anything else, really.\n      </li>\n      <li>\n        <a href=\"http://9to5mac.com/2014/03/17/this-is-healthbook-apples-first-major-step-into-health-fitness-tracking/\">\n          Screenshots of a Healthbook app have leaked.\n        </a>{\" \"}\n        Again, this does not necessarily prove the existence of a wearable. The\n        iPhone is{\" \"}\n        <a href=\"http://gizmodo.com/how-apples-m7-chip-makes-the-iphone-5s-the-ultimate-tr-1286594287\">\n          perfectly capable of tracking many of the items listed in this app\n        </a>\n        , and others aren’t trackable by anything but manual entry.\n      </li>\n      <li>\n        <a href=\"http://www.digitaltrends.com/mobile/nike-focusing-software-excited-future-plans-apple/#!GiOcY\">\n          Nike has all but abolished it’s FuelBand hardware team, and plans to\n          focus on software.\n        </a>{\" \"}\n        Nike and Apple have always been very close. Nike isn’t a hardware\n        company. Apple is. I think this is the biggest sign of what’s to come.\n        My guess is that Apple and Nike have been working together on a product\n        being designed and developed by Apple that will integrate with Nike+\n        (among many other things). I wouldn’t be surprised if we see this\n        product being sold in Apple <em>and</em> Nike stores upon its release.\n      </li>\n    </ol>\n    <p>\n      Clearly, this product will not ever be the cash cow that the iPhone ended\n      up being. I think Apple is okay with that. For one, it will strengthen\n      Apple’s current ecosystem of services and products. Second, assuming it’s\n      a well designed and useful product, it will help people get and stay\n      healthy. Apple may be willing to “take the hit” for the common good, as\n      illustrated by Tim Cook’s retort to a conservative finance group who\n      wanted him to commit to only doing things that were profitable in regard\n      to Apple’s energy sustainability programs, “When we work on making our\n      devices accessible by the blind, I don’t consider the bloody ROI.”\n    </p>\n  </BlogPage>\n);\n","date_published":"2014-04-29T15:00:00Z"},{"id":"https://mknepprath.com/writing/pokefy-your-skype","url":"https://mknepprath.com/writing/pokefy-your-skype","title":"Pokéfy Your Skype","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2014-04-02\",\n  title: \"Pokéfy Your Skype\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      If you use Skype on a regular basis, you get used to the constant bleeps\n      and bloops it emits when people log in or out, send messages to you, send\n      you files, etc. I discovered yesterday (due to a prank) that you can\n      actually set voice messages for each of these things, so I’ve put together\n      a new Pokémon-themed Notifications scheme!{\" \"}\n    </p>\n\n    <table>\n      <tbody>\n        <tr>\n          <th>Event:</th>\n          <th>Speak text:</th>\n        </tr>\n        <tr>\n          <td>When I Sign In</td>\n          <td>Gotta catch ‘em all!</td>\n        </tr>\n        <tr>\n          <td>When I Sign Out</td>\n          <td>Michael is out of usable Pokémon! Michael blacked out!</td>\n        </tr>\n        <tr>\n          <td>Contact Becomes Available</td>\n          <td>Wild “@” appeared!</td>\n        </tr>\n        <tr>\n          <td>Contact Becomes Unavailable</td>\n          <td>“@” fainted.</td>\n        </tr>\n        <tr>\n          <td>First Message in Conversation</td>\n          <td>“@” wants to battle!</td>\n        </tr>\n        <tr>\n          <td>New Message in Current Conversation</td>\n          <td>“@” used TACKLE!</td>\n        </tr>\n        <tr>\n          <td>Contact Request Received</td>\n          <td>Michael used POKéBALL!</td>\n        </tr>\n        <tr>\n          <td>Contacts Received</td>\n          <td>Gotcha! “@” was caught!</td>\n        </tr>\n        <tr>\n          <td>Incoming File Transfer</td>\n          <td>“@” used FILE TRANSFER!</td>\n        </tr>\n        <tr>\n          <td>File Transfer Completed</td>\n          <td>It’s super effective!</td>\n        </tr>\n        <tr>\n          <td>File Transfer Failed</td>\n          <td>But nothing happened!</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>\n      Are you ready? A world of dreams and adventures with POKéMON awaits! Let’s\n      go!\n    </p>\n  </BlogPage>\n);\n","date_published":"2014-04-02T15:00:00Z"},{"id":"https://mknepprath.com/writing/design-is-how-it-works","url":"https://mknepprath.com/writing/design-is-how-it-works","title":"Design Is How It Works","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2014-03-20\",\n  title: \"Design Is How It Works\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      <a href=\"https://twitter.com/dwiskus\">Dave Wiskus</a>\n      &nbsp;in the{\" \"}\n      <a href=\"http://www.imore.com/vector-34-importance-design\">\n        latest episode of Vector\n      </a>\n      :\n    </p>\n    <blockquote>\n      <p>\n        “People will say that they’ve been going through Dribbble looking for a\n        designer… and that always shocks me. If you’re searching for an app\n        designer or interaction designer based on the way they make things look,\n        that’s so backwards to me. The coat of paint is the last thing you put\n        on. It would be like choosing a builder based on the color of the\n        buildings they’ve made.”\n      </p>\n    </blockquote>\n    <p>\n      He’s addressing people who have a confused idea of what the definition of\n      design is. An app’s design should be self-fulfilling – an app’s purpose\n      dictates its design. If a platform, service, or product looks pleasant,\n      but is unpleasant to use, it is designed poorly. In the words of Steve\n      Jobs:\n    </p>\n    <blockquote>\n      <p>\n        “Most people make the mistake of thinking design is what it looks like.\n        People think it’s this veneer — that the designers are handed this box\n        and told, ‘Make it look good!’ That’s not what we think design is. It’s\n        not just what it looks like and feels like. Design is how it works.”\n      </p>\n    </blockquote>\n  </BlogPage>\n);\n","date_published":"2014-03-20T15:00:00Z"},{"id":"https://mknepprath.com/writing/the-importance-of-design","url":"https://mknepprath.com/writing/the-importance-of-design","title":"The Importance of Design","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2014-03-20\",\n  title: \"The Importance of Design\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      I’m not even halfway through the{\" \"}\n      <a href=\"http://www.imore.com/vector-34-importance-design\">\n        latest episode of Vector\n      </a>\n      , but there have been so many great quotes about topics that have been on\n      my mind lately, I had to write a quick post about it.{\" \"}\n      <a href=\"https://twitter.com/reneritchie\">Rene Ritchie</a> asks:\n    </p>\n    <blockquote>\n      <p>\n        “When should you give users settings and choices and options, and when\n        should you do that heavy lifting for them?”\n      </p>\n    </blockquote>\n    <p>\n      Straightforward question – and the answer was obvious to me up through a\n      couple years ago. We should be given as many settings, choices, and\n      options as possible so we can optimize our experience to fit our every\n      want or need.\n    </p>\n    <p>\n      I’ve changed my mind, however. Here is the candid response I gave to my\n      brother when he recently asked, “Why do artists use Macs?”:\n    </p>\n    <blockquote>\n      <p>\n        “PCs are for people who want to have a computer and do computery things\n        – experiment with them, customize them, optimize them, etc – and that’s\n        fine. The Mac is more for people who want a computer for getting stuff\n        done rather than have to deal with anything related to the computer\n        itself.”\n      </p>\n    </blockquote>\n    <p>\n      <a href=\"https://twitter.com/dwiskus\">Dave Wiskus</a> shared similar\n      thoughts with Rene in response to his question:\n    </p>\n    <blockquote>\n      <p>\n        “I lost so many years getting the software to work that I could’ve spent\n        learning the software. If I had spent that same amount of time in front\n        of a Mac learning Photoshop, I would’ve been years ahead of where I am\n        now. That’s time that I, and so many other people, have lost. And so now\n        I feel that my job in designing a piece of software is to not steal that\n        time from people. I want to make sure they’re not wasting their time\n        trying to figure out how the app works, and instead writing their note,\n        and then moving on.”\n      </p>\n    </blockquote>\n    <p>\n      In essence, a designer’s job is to reduce the friction between a person\n      and their goal, whether that be creating a design, jotting down a note,\n      sharing a photo – basically anything. The fewer steps there are between a\n      person wanting to do something and achieving it – the better the design.\n    </p>\n    <p>Rene:</p>\n    <blockquote>\n      <p>\n        “The apps that I like the most are the ones that don’t let me mess\n        around – they basically force me into doing what I’m supposed to do. In\n        a way, it’s sort of enabling. Yes, I can’t customize the way I want.\n        That is a loss, but the gain is so much more valuable.”\n      </p>\n    </blockquote>\n  </BlogPage>\n);\n","date_published":"2014-03-20T15:00:00Z"},{"id":"https://mknepprath.com/writing/my-only-suggestion-for-facebook-paper","url":"https://mknepprath.com/writing/my-only-suggestion-for-facebook-paper","title":"My Only Suggestion For Facebook Paper","content_text":"// Archival link:\n// https://web.archive.org/web/20140212174237/http://www.mknepprath.com/my-only-suggestion-for-facebook-paper/\n\n// TODO: Check accuracy of timestamp.\n\nimport BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2014-02-12\",\n  title: \"My Only Suggestion For Facebook Paper\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      First of all, great job to{\" \"}\n      <a href=\"https://twitter.com/mike_matas\">Mike Matas</a> and his team. This\n      new Facebook experience is a joy to use.\n    </p>\n    <p>\n      I do have one gripe with it, however, and I only bring it up because I\n      feel that the solution is obvious and a missed opportunity. Allow me to\n      introduce Facebook lists:\n    </p>\n\n    <img\n      alt=\"Facebook lists\"\n      className=\"blog-image\"\n      src=\"/assets/facebook-paper-lists.png\"\n    />\n\n    <p>Facebook lists are powerful, and here’s why:</p>\n    <ol>\n      <li>\n        When you create a list, you have the ability to view it as a Newsfeed\n        containing posts exclusively by the people you chose to be in that list.\n      </li>\n      <li>\n        You can\n        <a href=\"http://www.mknepprath.com/wp-content/uploads/2014/02/Screen-Shot-2014-02-12-at-8.47.19-AM.png\">\n          {\" \"}\n          save lists to your favorites section\n        </a>{\" \"}\n        for easy access.\n      </li>\n      <li>\n        You can choose to share a post with only the people in a certain list.\n      </li>\n      <li>\n        Finally, Facebook already dynamically generates lists for you (called\n        Smart Lists) based on employment, location, school, and family. With\n        those, most of the work is done for you already.\n      </li>\n    </ol>\n    <p>\n      The one problem with Facebook lists? It’s a power user feature that normal\n      people do not use. I believe it is for this reason that lists weren’t even\n      included in Facebook Paper. And here’s where Facebook Paper comes in.\n    </p>\n    <p>\n      Facebook Paper is largely a re-imagining of the current Facebook\n      experience, but does include something new: Sections.\n    </p>\n\n    <img\n      alt=\"Facebook Paper sections\"\n      className=\"blog-image\"\n      src=\"/assets/facebook-paper-sections.png\"\n    />\n\n    <p>\n      If you swipe to the right on the featured post (“Movie night!” depicted\n      above), it takes you to new Newsfeeds (such as Tech, Pop Life, Score,\n      Headlines) containing curated news content. You don’t have control over\n      what appears in these sections, these were pre-decided by Facebook through\n      agreements they’ve made with certain content providers. The one problem\n      with Facebook Sections? I don’t need a new source of news, and I don’t\n      find this source to be as easily digestible as others (such as Twitter).\n    </p>\n    <p>\n      Do you see where I’m going with this?{\" \"}\n      <b>Facebook Paper Sections should be Facebook lists.</b> And here are the\n      reasons I find it particularly obvious:\n    </p>\n    <ol>\n      <li>\n        When swiping to the right of your main Newsfeed, it makes sense that you\n        would find alternate Newsfeeds. This already exists with Facebook lists.\n      </li>\n      <li>\n        Typically, the problem with implementing something like this is that\n        users would have to go through the process of creating these alternate\n        lists. This has already been taken care of with Smart Lists. They have a\n        set of default lists, dynamically generated by Facebook.\n      </li>\n      <li>\n        Facebook Paper is an experiment, giving them room to play with new ways\n        of letting users create and manage lists.\n      </li>\n    </ol>\n    <p>\n      Not a single service has figured out how to get lists to work. Google came\n      closest with Circles on Google+, but lists on Facebook and Twitter are\n      both duds thus far. Facebook Paper gives Facebook an opportunity to make\n      lists work by easing users into using them first, then introducing the\n      more useful and powerful features as needed.\n    </p>\n    <p>\n      <b>Bonus read:</b>{\" \"}\n      <a href=\"http://blog.brianlovin.com/design-details-paper-by-facebook\">\n        Design Details: Paper by Facebook\n      </a>{\" \"}\n      by Brian Lovin\n    </p>\n  </BlogPage>\n);\n","date_published":"2014-02-12T15:00:00Z"},{"id":"https://mknepprath.com/writing/vine-introduces-web-profiles","url":"https://mknepprath.com/writing/vine-introduces-web-profiles","title":"Vine Introduces Web Profiles","content_text":"// Archival link:\n// https://web.archive.org/web/20140127084100/http://www.mknepprath.com/vine-introduces-web-profiles/\n\nimport BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2014-01-03\",\n  title: \"Vine Introduces Web Profiles\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      I wonder if <a href=\"https://vine.co/\">Vine</a>\n      ‘s web profiles will do better than Instagram’s. Does anyone visit those?\n      Vine’s announcement comes with a new feature: TV mode. This blows up the\n      Vines to the size of your browser and plays them in sequence.\n    </p>\n\n    {/* TODO: Get screenshot from archival link. */}\n  </BlogPage>\n);\n","date_published":"2014-01-03T15:00:00Z"},{"id":"https://mknepprath.com/writing/spotify-app-adds-free-option","url":"https://mknepprath.com/writing/spotify-app-adds-free-option","title":"Spotify App Adds Free Option","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-12-19\",\n  title: \"Spotify App Adds Free Option\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      You can finally listen to all of your Spotify playlists on your phone\n      without paying for Premium. Only one catch – you have to listen to them on\n      shuffle. Not bad.\n    </p>\n    <p>\n      In other news, I hear their desktop client just went through a major\n      redesign. Haven’t seen it yet, but I look forward to doing so!\n    </p>\n  </BlogPage>\n);\n","date_published":"2013-12-19T15:00:00Z"},{"id":"https://mknepprath.com/writing/angry-birds-goes-nintendo","url":"https://mknepprath.com/writing/angry-birds-goes-nintendo","title":"Angry Birds Goes Nintendo","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-12-16\",\n  title: \"Angry Birds Goes Nintendo\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      Rovio just released{\" \"}\n      <a href=\"https://itunes.apple.com/us/app/angry-birds-go!/id642821482?mt=8\">\n        Angry Birds Go!\n      </a>{\" \"}\n      for iOS, and I wonder if their decision to develop this had anything to do\n      with Nintendo saying they would never develop for mobile phones. The\n      longer Nintendo waits, the more chances other developers will have to jump\n      in and{\" \"}\n      <a href=\"https://itunes.apple.com/us/app/oceanhorn/id708196645?mt=8\">\n        take their rupees\n      </a>\n      .\n    </p>\n  </BlogPage>\n);\n","date_published":"2013-12-16T15:00:00Z"},{"id":"https://mknepprath.com/writing/ifttt-adds-ios-location","url":"https://mknepprath.com/writing/ifttt-adds-ios-location","title":"IFTTT Adds iOS Location","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-12-12\",\n  title: \"IFTTT Adds iOS Location\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      <a href=\"http://www.mknepprath.com/ifttt/\">IFTTT</a> introduced a new\n      channel today: iOS Location. Yep, this means you can make your other\n      channels interact with where you are located at any time. Want your lights\n      to automatically turn on when you get home? Track when you arrive or leave\n      from work? Send your spouse a text when you’re heading home? IFTTT can\n      automate all of that. Pretty cool, huh?\n    </p>\n  </BlogPage>\n);\n","date_published":"2013-12-12T15:00:00Z"},{"id":"https://mknepprath.com/writing/instagram-direct","url":"https://mknepprath.com/writing/instagram-direct","title":"Instagram Direct","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-12-12\",\n  title: \"Instagram Direct\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      Instagram’s introduced it’s new direct messaging feature, along with some\n      other iOS 7-y UI changes. It’s similar to Facebook Messenger in that it\n      tells you when others have seen the photo you shared with them. Does\n      anyone actually like read receipts?\n    </p>\n  </BlogPage>\n);\n","date_published":"2013-12-12T15:00:00Z"},{"id":"https://mknepprath.com/writing/this-goes-out-to-gruber","url":"https://mknepprath.com/writing/this-goes-out-to-gruber","title":"Google's Android And The HTC/Amazon Rumor","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-10-30\",\n  title: \"Google's Android And The HTC/Amazon Rumor\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      Now seems like a good time for{\" \"}\n      <a href=\"http://arstechnica.com/gadgets/2013/10/googles-iron-grip-on-android-controlling-open-source-by-any-means-necessary/\">\n        this article by Ron Amadeo\n      </a>{\" \"}\n      to resurface. Here are his key points:\n    </p>\n    <p>\n      1. Android started out as open source, but the open source apps that\n      Google was developing are slowly being replaced by closed source Google\n      apps. When they are replaced, Google stops developing the open source app.\n      The best example of this is Search, which can be seen on{\" \"}\n      <a href=\"http://arstechnica.com/gadgets/2013/10/googles-iron-grip-on-android-controlling-open-source-by-any-means-necessary/\">\n        the first page of Ron’s article\n      </a>\n      . This has also happened with{\" \"}\n      <a href=\"http://arstechnica.com/gadgets/2013/10/googles-iron-grip-on-android-controlling-open-source-by-any-means-necessary/2/\">\n        Music, Calendar, the keyboard, Camera, and as Ron predicted, SMS\n        messaging\n      </a>\n      . Since this article was published, Google has announced that Google\n      Hangouts now supports SMS. Google’s grip just got a little tighter.\n    </p>\n    <p>\n      2. If you want to use these closed source apps developed by Google, you\n      have to join the Open Handset Alliance (OHA). To be in the OHA you have to\n      contractually agree to not develop phones without Google’s apps. If you\n      do, you get kicked out. You are then either stuck with the undeveloped\n      open source apps, or you have to develop your own.\n    </p>\n    <p>\n      3. If you want to develop a new Android OS, you are going to have a hard\n      time finding a phone manufacturer to carry it, because they are all stuck\n      in the OHA.\n    </p>\n    <p>\n      4. Finally, you’re going to have a hard time getting people to develop\n      apps for your Android OS, because Google offers many APIs that make it\n      easy to develop apps… but they only work with Google Play Services, which\n      is only available through the package of Google apps you get by being a\n      member of the OHA.\n    </p>\n    <p>\n      5. The only company that has been able to survive without being a member\n      of the OHA is Amazon. They develop their own clones to the apps that\n      Google stops developing.\n    </p>\n    <p>\n      My question: Rumor has it that HTC is developing a phone for Amazon, but\n      HTC is a member of the OHA. Is Google going to kick them out, and can an\n      HTC/Amazon phone survive without Google’s support?\n    </p>\n  </BlogPage>\n);\n","date_published":"2013-10-30T15:00:00Z"},{"id":"https://mknepprath.com/writing/googles-icons-on-ios","url":"https://mknepprath.com/writing/googles-icons-on-ios","title":"Google’s Icons On iOS","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-10-25\",\n  title: \"Google’s Icons On iOS\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      Google spent all year unifying their iOS icons with a consistent ridge\n      running along the bottom of each. Then iOS 7 came out and the shape of the\n      app icons changed. What a mess. Some are fixed, others are still amiss. My\n      opinion? It’s time to ditch the ridge. Google Maps is the only one that\n      looks good on my phone anymore.\n    </p>\n\n    <img\n      alt=\"Google's icons on iOS\"\n      className=\"blog-image\"\n      src=\"/assets/googles-icons-on-ios.jpg\"\n    />\n  </BlogPage>\n);\n","date_published":"2013-10-25T15:00:00Z"},{"id":"https://mknepprath.com/writing/square-cash","url":"https://mknepprath.com/writing/square-cash","title":"Square Cash","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-10-16\",\n  title: \"Square Cash\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      <a href=\"http://allthingsd.com/20131015/the-money-is-in-the-email/\">\n        Walter S. Mossberg\n      </a>\n      :\n    </p>\n    <blockquote>\n      <p>\n        The people helping me test were generally wowed. One called it “slick.”\n        Another replied: “Done. Two secs.” A third, with whom I had trouble\n        using PayPal last year, said she’d use it “1,000 percent.”\n      </p>\n    </blockquote>\n    <p>\n      <a href=\"https://squareup.com/\">Square</a> now lets you email cash to\n      anyone free of charge. Sounds too good to be true, but judging from the\n      quotes above, it’s really that magical. Keep an eye on Square – it seems\n      that they will be playing a defining role in how we work with our money in\n      the future.\n    </p>\n  </BlogPage>\n);\n","date_published":"2013-10-16T15:00:00Z"},{"id":"https://mknepprath.com/writing/instagram-for-ios-7","url":"https://mknepprath.com/writing/instagram-for-ios-7","title":"Instagram For iOS 7","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-09-26\",\n  title: \"Instagram For iOS 7\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      Let me preface this post by saying that I love redesigns and all of the\n      apps that I’ve seen iOS 7 updates for have been great… until this one. I\n      appreciate what they were trying to do, but this just feels rushed to me.\n      None of the divider lines are necessary, they only serve to clutter up the\n      UI. Also, why have the profile pictures been changed to circles? It’s not\n      consistent with any of the other elements in this app.\n    </p>\n    <p>\n      Designing for iOS 7 requires more than just flattening bubbly elements and\n      pulling ideas straight from Apple’s new apps. Some apps, like{\" \"}\n      <a href=\"https://medium.com/what-i-learned-building/b31868b76721\">\n        Mailbox\n      </a>\n      ,{\" \"}\n      <a title=\"007\" href=\"http://vesperapp.co/blog/vesper-1-007/#more-143\">\n        Vesper\n      </a>\n      , and <a href=\"http://www.realmacsoftware.com/clear/\">Clear</a>, were\n      essentially iOS 7 apps built for iOS 6, so they didn’t require many\n      changes. Other apps were very iOS 6-y and required major overhauls. These\n      include{\" \"}\n      <a href=\"http://www.theverge.com/2013/9/18/4743908/evernote-ios-7-iphone-ipad-complete-redesign-update\">\n        Evernote\n      </a>\n      ,{\" \"}\n      <a href=\"http://www.theverge.com/2013/9/20/4751892/best-new-apps-omnifocus-2\">\n        OmniFocus 2\n      </a>\n      , and{\" \"}\n      <a href=\"http://blog.hipmunk.com/hipmunk-news-updated-android-and-ios-7-hipmunk-apps/\">\n        Hipmunk\n      </a>\n      . Instagram’s redesign is just a flattened iOS 6 app with little regard to\n      simplifying or optimization.\n    </p>\n\n    <img\n      alt=\"Screenshot of Instagram's redesign for iOS 7\"\n      className=\"blog-image\"\n      src=\"/assets/instagram-for-ios-7.png\"\n    />\n  </BlogPage>\n);\n","date_published":"2013-09-26T15:00:00Z"},{"id":"https://mknepprath.com/writing/ios-7-flashlight","url":"https://mknepprath.com/writing/ios-7-flashlight","title":"iOS 7 Flashlight","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-09-26\",\n  title: \"iOS 7 Flashlight\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      I submitted this subtle detail to{\" \"}\n      <a href=\"http://littlebigdetails.com/\">Little Big Details</a>, but I\n      though it was worth sharing here as well. Apple sweats the details. (Hint:\n      Look at the on/off switch on the flashlight.)\n    </p>\n\n    <img\n      alt=\"Screenshot of the flashlight app icon in iOS 7\"\n      className=\"blog-image\"\n      src=\"/assets/ios-7-flashlight.jpg\"\n    />\n  </BlogPage>\n);\n","date_published":"2013-09-26T15:00:00Z"},{"id":"https://mknepprath.com/writing/iphone-naming-conventions","url":"https://mknepprath.com/writing/iphone-naming-conventions","title":"iPhone Naming Conventions","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-09-24\",\n  title: \"iPhone Naming Conventions\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      Listening to the latest{\" \"}\n      <a href=\"https://web.archive.org/web/20131026111646/http://www.muleradio.net/thetalkshow/\">\n        Talk Show\n      </a>\n      , I heard Gruber give his prediction for where Apple will go with future\n      iPhone names. His prediction: iPhone 6 on top, then iPhone CS, then 5C\n      free with a plan. My prediction for 2014: iPhone 6 on top, then the 5S,\n      then the 5C free with a plan. Then in 2015 we’ll see a 6S on top, 6C, 5S.\n      See how the C-series alternates between the bottom two tiers each year? If\n      the pattern continues it would look like this… 2016: 7, 6S, 6C, 2017: 7S,\n      7C, 6S.\n    </p>\n  </BlogPage>\n);\n","date_published":"2013-09-24T15:00:00Z"},{"id":"https://mknepprath.com/writing/ios-7-eve","url":"https://mknepprath.com/writing/ios-7-eve","title":"iOS 7 Eve","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-09-18\",\n  title: \"iOS 7 Eve\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      Apple is releasing iOS 7 to the public tomorrow, and I couldn’t be more\n      excited! In case you haven’t heard, Apple has redesigned their entire\n      mobile operating system from the ground up. Every single pixel has\n      changed. They’ve been tweaking and perfecting it since it’s big reveal at\n      WWDC earlier this year… and the day has finally come for me to try it out\n      for myself. One thing I find particularly interesting about this update is\n      how much it reveals{\" \"}\n      <a href=\"https://tapfame.com/ios7/\">\n        the use of Apple’s default chrome in third party apps\n      </a>\n      . This is the biggest change to iOS since the first iPhone came out, and I\n      welcome it.\n    </p>\n    <p>\n      (P.S.{\" \"}\n      <a href=\"/writing/highlighting-apples-most-serious-problem\">\n        Remember when I told Apple to get rid of their horrendous highlights?\n      </a>\n      )\n    </p>\n  </BlogPage>\n);\n","date_published":"2013-09-18T15:00:00Z"},{"id":"https://mknepprath.com/writing/highlighting-apples-most-serious-problem","url":"https://mknepprath.com/writing/highlighting-apples-most-serious-problem","title":"Highlighting Apple's Most Serious Problem","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2013-01-11\",\n  title: \"Highlighting Apple's Most Serious Problem\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      If you know me, you know I enjoy using Apple’s products. Whether it be the\n      iPhone, iMac, iPad, iRefrigerator… I find the simplicity and elegance to\n      be a breath of fresh air after exclusively working on PCs for the first 18\n      years of my life. I do have one major issue with all of my iDevices\n      however.\n    </p>\n    <p>First, let’s take a look at a sample of Apple app icons.</p>\n\n    <img\n      alt=\"Screenshot of iOS app icons with highlights\"\n      className=\"blog-image\"\n      src=\"/assets/highlighting-apple-1.png\"\n    />\n\n    <p>\n      Do you see it? Look closer. Closer. That’s right. Every single one of them\n      has that hokey highlight stretching across the top/middle. All of these\n      icons look dated and cheesy, and a big reason for that is this awful\n      highlight. But wait. It gets worse.\n    </p>\n\n    <img\n      alt=\"Screenshot of more iOS app icons with faux highlights\"\n      className=\"blog-image\"\n      src=\"/assets/highlighting-apple-2.png\"\n    />\n\n    <p>\n      It’s spreading like a virus! Let this be a lesson to you, app developers.\n      Highlights are okay, just don’t use this one anymore.\n    </p>\n  </BlogPage>\n);\n","date_published":"2013-01-11T15:00:00Z"},{"id":"https://mknepprath.com/writing/get-things-done","url":"https://mknepprath.com/writing/get-things-done","title":"How I Get Things Done","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2012-09-17\",\n  title: \"How I Get Things Done\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      I recently read the book{\" \"}\n      <a href=\"http://99u.com/book\">Making Ideas Happen</a> by{\" \"}\n      <a href=\"https://twitter.com/scottbelsky\">Scott Belsky</a>. While I’d\n      highly recommend that you read it, I know that you probably don’t have\n      time. If this is so, then this is the perfect book for you!\n    </p>\n    <p>Catch-22?</p>\n    <p>\n      The main area this book helped me was in my note-taking habits. During\n      meetings, everything I deemed important would be scribbled down in my\n      notebook for later review. It became difficult to pull the tasks that\n      actually needed to be done from the pages.\n    </p>\n    <p>\n      The book recommended a new method. The{\" \"}\n      <a href=\"http://www.actionmethod.com/methodology\">Action Method</a>.\n      Here’s how I use it.\n    </p>\n    <ul>\n      <li>\n        First, one page is dedicated to each project, no matter how small.\n        Trying to organize five different projects on one page was not ideal and\n        unnecessary.\n      </li>\n      <li>\n        Most of each page, save the top and bottom right corners, are open for\n        notes.\n      </li>\n      <li>\n        Anytime a task that can be completed is mentioned, it gets placed in a\n        list at the top right corner. Each task should begin with a verb, as I\n        am going to be taking action and completing them after the meeting is\n        over. I make sure they are fairly simple. “Build an entire website.”\n        does not work, while “Pick out colors for website.” does. I break every\n        project down to steps like this.\n      </li>\n      <li>\n        Finally, the bottom right of the page is dedicated to backburner items.\n        These are projects or tasks that I or somebody else thought up, but\n        can’t or shouldn’t take action on right now. These get compiled later\n        and are reviewed monthly.\n      </li>\n    </ul>\n    <p>\n      This was not mentioned in Making Ideas Happen, but I believe this is\n      important, nonetheless. Make sure you purchase a nice notebook, because\n      you won’t value it as highly if you don’t. I used to take notes on\n      everything, but having a nice new notebook has motivated me to have it\n      with me at all times.\n    </p>\n    <p>How do you get things done?</p>\n  </BlogPage>\n);\n","date_published":"2012-09-17T15:00:00Z"},{"id":"https://mknepprath.com/writing/3d-printing","url":"https://mknepprath.com/writing/3d-printing","title":"3D Printing and the End of the Industrial Age","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2012-08-13\",\n  title: \"3D Printing and the End of the Industrial Age\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      3D printing, or{\" \"}\n      <a href=\"http://en.wikipedia.org/wiki/3D_printing\">\n        additive manufacturing\n      </a>\n      , has been{\" \"}\n      <a href=\"http://mashable.com/follow/search/?q=3d+printing&amp;commit=Search\">\n        in the news\n      </a>{\" \"}\n      more and more lately, and for good reason. It’s allowing people to build\n      amazing things, such as a{\" \"}\n      <a href=\"http://mashable.com/2012/08/10/japanese-printing-live-fetus/\">\n        3D replica of a live fetus\n      </a>\n      , or a{\" \"}\n      <a href=\"http://mashable.com/2012/08/03/3d-printed-magic-arms/\">\n        robotic exoskeleton\n      </a>\n      . These are fantastic uses for this breakthrough technology.\n    </p>\n    <p>\n      If this is something you are extremely excited about, it’s possible to buy\n      one <a href=\"http://www.ebay.com/sch/i.html?_nkw=3d+printer\">right now</a>\n      . 3D printers are relatively small and becoming more affordable every day,\n      so I don’t think it’s not too much of a stretch to say that there may be a\n      3D printer in every household in the not-so-distant future. Here are a few\n      changes I think will come with this device as it becomes more common.\n    </p>\n    <ol>\n      <li>\n        <b>Materials can and will be purchased in bulk.</b> Rather than buying\n        plates, cups, decorations, brackets, etc, we will be capable of buying\n        materials like plastic in bulk the same way we buy paper and ink for\n        printing. By always having these raw materials available, we are only\n        limited by the number of 3D models available online. If you know how to\n        use a 3D modeling program, you may not be limited at all.\n      </li>\n      <li>\n        <b>\n          Mass production of small items will be much less common, if not\n          entirely unnecessary.\n        </b>{\" \"}\n        Instead of producing a million copies of a product and hoping they’ll\n        sell, household 3D printers allow for an on-demand system. As consumers,\n        we will no longer have to go to the store and hope they have a\n        particular item we want in stock. We can browse online and print it\n        ourselves, and even design it ourselves with the proper training.\n      </li>\n      <li>\n        <b>3D printer-friendly digital models will become a big market.</b> As\n        mentioned above, a large online market will form around printable 3D\n        models. There will be many open source models available, many of them\n        meeting the basic needs of individuals, such as a full dining set.\n      </li>\n      <li>\n        <b>It will be much easier to be a stop-motion hobbyist.</b> This one’s\n        not for everyone, but 3D printers will most likely bring about a big\n        wave of aspiring animators. What level of animation can be achieved with\n        3D printers? Watch Coraline and{\" \"}\n        <a href=\"http://images.businessweek.com/ss/09/04/0415_how_to_innovate/9.htm\">\n          you’ll see\n        </a>\n        .\n      </li>\n      <li>\n        <b>Recycling materials within the household will become more common.</b>{\" \"}\n        Getting sick of your old decorations? Why not stick them back into your\n        3D printer and create something new? Not only that, but if you\n        absolutely need a plate for a guest, you can stick anything you no\n        longer need of that particular material in it, and voilà!\n      </li>\n    </ol>\n    <p>\n      In the end, I believe the greatest change this technology will bring is an\n      end to most labor-intensive factory jobs. While the potential is great,\n      there are many issues that will need to be covered, such as{\" \"}\n      <a href=\"http://thenextweb.com/shareables/2012/07/26/the-worlds-first-3d-printed-gun-is-a-terrifying-thing/\">\n        the creation of weaponry\n      </a>\n      . What do you think could be a potential use or misuse of 3D printing?\n    </p>\n  </BlogPage>\n);\n","date_published":"2012-08-13T15:00:00Z"},{"id":"https://mknepprath.com/writing/introducing-square","url":"https://mknepprath.com/writing/introducing-square","title":"You Can Now Accept Credit Cards with Square","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2012-07-24\",\n  title: \"You Can Now Accept Credit Cards with Square\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      As a freelancer, it can be inconvenient to have to wait for a cash or\n      check payment. Both require that the client has made preparations to pay\n      you, by either getting cash out of the bank, or remembering to write a\n      check and bring it to your next meeting. Wouldn’t it be nice if you could\n      accept credit cards, something your client probably has on them at all\n      times?\n    </p>\n    <p>\n      Introducing <a href=\"https://squareup.com/\">Square</a>, the latest project\n      of <a href=\"https://twitter.com/jack\">Jack Dorsey</a>, founder of Twitter.\n    </p>\n    <p>\n      This service is extremely easy to use, and is designed beautifully. Here’s\n      how to get started.\n    </p>\n    <ol>\n      <li>\n        <b>\n          <a href=\"https://squareup.com/\">Sign up.</a>\n        </b>\n        You will be asked for your address during this process. This is so that\n        you will receive a free Square Card Reader in the mail. This reader is\n        absolutely free, they even cover the shipping cost.\n      </li>\n      <li>\n        <b>Verify your identity.</b> This is where Square collects legal\n        information regarding you and your business.\n      </li>\n      <li>\n        <b>Add a bank account.</b> In order to function, you need to add a bank\n        account to Square. Payments you accept will be deposited into this\n        account.\n      </li>\n      <li>\n        <b>Get the app.</b> This is the main requirement. You are able to get\n        this app on your iPhone, Android phone, iPad, and even your iPod. I’m\n        able to accept payments on my 3 year old iPod Touch!\n      </li>\n      <li>\n        <b>Join the Square Directory.</b> Square has a public directory where\n        people are able to search for businesses they might need. You are asked\n        to create a Public Profile, which is the information that comes up when\n        you show up in a search.\n      </li>\n      <li>\n        <b>Accept payments!</b> Plug the Square Card Reader into the iPhone jack\n        of your device. Open the Square app. Swipe your client’s card. From now\n        on, this is all you have to do.\n      </li>\n    </ol>\n    <p>\n      One final disclaimer, Square charges 2.75% of the payment per swipe. This\n      is so that they can afford to keep the service available, and to fund\n      further research and updates. Square is revolutionizing the way we\n      exchange money, and other similar services{\" \"}\n      <a href=\"https://www.paypal.com/webapps/mpp/credit-card-reader\">\n        like Paypal\n      </a>{\" \"}\n      are scrambling to catch up. Square has already developed two more apps,\n      one that allows you to{\" \"}\n      <a href=\"https://squareup.com/register\">turn your iPad into a register</a>\n      , and the other allows you to{\" \"}\n      <a href=\"https://squareup.com/pay-with-square\">\n        make payments without a card\n      </a>\n      .\n    </p>\n    <p>\n      Would you ever see yourself using a service like this? Is the fee worth\n      the convenience?\n    </p>\n  </BlogPage>\n);\n","date_published":"2012-07-24T15:00:00Z"},{"id":"https://mknepprath.com/writing/ifttt","url":"https://mknepprath.com/writing/ifttt","title":"Leverage the Combined Power of Your Services with IFTTT","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2012-07-23\",\n  title: \"Leverage the Combined Power of Your Services with IFTTT\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      <a href=\"https://ifttt.com\">IFTTT</a> is a simple service that produces\n      some rather incredible results. Because of IFTTT, I can post this blog and\n      it will automatically be shared to Facebook, Twitter, and LinkedIn. I also\n      get alerted about incoming rain through text, and new free mp3 albums on\n      Amazon through email.\n    </p>\n    <p>\n      And this only hints at a few of the thousands of combinations you can\n      create with your services.\n    </p>\n    <p>\n      All of IFTTT is based on a single statement: If This Then That.\n      Essentially, if one service does this (e.g. a new photo is tagged, a new\n      article is posted, the weather changed), then do that (e.g. download the\n      photo, share the article, text the weather). Here’s how IFTTT works:\n    </p>\n    <ol>\n      <li>\n        <b>Add your channels.</b> In order to work, you need to add your\n        services to IFTTT. These services are called channels. Go the the\n        Channels tab to add yours.\n      </li>\n      <li>\n        <b>Use pre-built recipes.</b> When two services are combined like in the\n        examples above, they are called a recipe. Many recipes have already been\n        built and shared by others on the Browse page, the most popular being\n        ‘When Facebook profile picture changes, update Twitter profile picture.’\n      </li>\n      <li>\n        <b>Build your own recipes.</b> There are already a large number of\n        recipes available, but if you can’t find the one you need, it’s possible\n        to build your own. Click on the Create tab and follow the seven steps to\n        get the results you are looking for.\n      </li>\n      <li>\n        <b>Share your recipes.</b> If you needed to build a recipe to receive\n        updates from Jugglers Anonymous in your email, then you’re probably not\n        the only one. Share your recipe on IFTTT for others to use.\n      </li>\n    </ol>\n    <p>\n      The IFTTT team continues to add more services and features, so it’s smart\n      to sign up for the newsletter with{\" \"}\n      <a href=\"https://ifttt.com/applets/8363p\">an IFTTT recipe</a> (of course).\n    </p>\n    <p>\n      If you could combine any two of your services, which two would they be,\n      and what would they do? Share the link to the recipe if you can create it!\n    </p>\n  </BlogPage>\n);\n","date_published":"2012-07-23T15:00:00Z"},{"id":"https://mknepprath.com/writing/video-games-are-evolving","url":"https://mknepprath.com/writing/video-games-are-evolving","title":"Video Games Are Evolving!","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2012-07-19\",\n  title: \"Video Games Are Evolving!\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      Last week I discussed the future of gaming, and mentioned that we’d be\n      revisiting the subject and seeing how current technology could be used to\n      reinvigorate big franchise games. That’s right. It’s time to talk about\n      Pokémon.\n    </p>\n    <p>\n      Nintendo was one of the first gaming companies to introduce{\" \"}\n      <a href=\"http://www.youtube.com/watch?v=yk3rSX-vOVw\">\n        augmented reality tech\n      </a>{\" \"}\n      to their audience. They love introducing new technology to their fans,\n      like the Wii with it’s motion controllers. Hey, Nintendo! This is what\n      your next big project should be.\n    </p>\n    <ol>\n      <li>\n        <b>Non-player characters.</b> By connecting a Kinect sensor with some\n        augmented reality glasses, a man has{\" \"}\n        <a href=\"http://www.sciencespacerobots.com/blog/71520123\">\n          already created a life-sized NPC\n        </a>{\" \"}\n        that follows him around. He can even interact with it by patting it on\n        the head and moving its tie. Remember how Pikachu used to{\" \"}\n        <a href=\"http://www.emuparadise.me/fup/up/67984-Pokemon_-_Yellow_Version_(USA,_Europe)-7-thumb.png\">\n          follow you around\n        </a>{\" \"}\n        way back in Yellow? Yeah, that’s totally possible. This, of course,\n        would work for all NPCs, such as other Pokémon, trainers, or shop\n        owners, who would all be able to walk around you and interact with you\n        and the environment around them.\n      </li>\n      <li>\n        <b>Tall grass.</b> Holophonic sound is going to bring this whole\n        experience to life, but it could be especially useful for finding\n        Pokémon. If you wanted to find one in the games thus far, you’d walk\n        around in tall grass until you basically tripped on one. With this new\n        game, tall grass would be randomly generated in certain spots on the\n        ground around you. Now, you could go tromping around in it… or you could\n        listen for the sound of rustling. Using sound to pinpoint the location\n        of things in games has never been{\" \"}\n        <a href=\"http://www.youtube.com/watch?v=x5G3HUiscW4\">this realistic</a>.\n      </li>\n      <li>\n        <b>Shops & Pokémon Centers.</b> Here’s how actual businesses could get\n        involved in this game. A store like Target could place a marker anywhere\n        in their store. This marker tells your goggles to put a shop there.\n        Virtual shelves are lined with virtual goods, such as pokéballs and\n        healing potions. These items can be purchased with the in-game money. If\n        Target wants to capitalize on this extra virtual business, they can\n        offer store-exclusive content that can be purchased with real money.\n      </li>\n      <li>\n        <b>Battle.</b> Although I’d prefer that they move away from their\n        current turn-based system, all I really want is to see the fight\n        happening between my and my opponent. Whether they create new battle\n        mechanics, or set it up Pokémon Stadium-style, I don’t care.\n      </li>\n    </ol>\n    <p>\n      The interesting thing about all of this for me is that it can almost make\n      the Pokémon TV show into a non-fictional story. What if Pokémon takes\n      place in the future, when augmented reality contact lenses are essential\n      to interact with the environment, machines, and other people? What if\n      they’re never mentioned because of how commonplace they are? Suddenly,\n      many of the crazy sci-fi stories we’ve read or watched become reality.\n    </p>\n  </BlogPage>\n);\n","date_published":"2012-07-19T15:00:00Z"},{"id":"https://mknepprath.com/writing/buffer","url":"https://mknepprath.com/writing/buffer","title":"Become More Effective On Twitter with Buffer","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2012-07-10\",\n  title: \"Become More Effective On Twitter with Buffer\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      I ran into a problem recently. I would read a bunch of posts and share\n      them all on Twitter right away. My followers would get inundated with\n      updates, and usually not at a time that was ideal for them. How was I to\n      continue sharing all of my discoveries without losing all of my followers?\n    </p>\n    <p>\n      <a href=\"http://bufferapp.com/r/507fd\">Buffer</a> had the answer.\n    </p>\n    <p>\n      Buffer allows you to create a schedule for your tweets, spreading them out\n      so that your posts are consistent, but not overwhelming. Here’s how to\n      make the most of Buffer:\n    </p>\n    <ol>\n      <li>\n        <b>\n          Install the{\" \"}\n          <a href=\"http://bufferapp.com/extras\">Buffer extensions and apps</a>.\n        </b>{\" \"}\n        You need these if you want to take full advantage of Buffer. I use the\n        Chrome extension, which puts Buffer at the top of the browser at all\n        times, and also integrates a Buffer button into Twitter, Facebook,\n        Reddit, and many more websites.\n      </li>\n      <li>\n        <b>Keep your Buffer queue full.</b> Whenever you find anything you want\n        to tweet, click Buffer. A window will open where you can tweak the post\n        that is automatically generated. Once you’ve perfected the post, click\n        Add to Buffer.\n      </li>\n      <li>\n        <b>Reorder tweets & tweak settings.</b> When you visit Buffer’s website,\n        you will be taken to your dashboard. Here you are able to see all of\n        your tweets and what times they are scheduled to go live. You’re able to\n        switch the order, edit the posts, and edit the default schedule. As you\n        use Buffer more, you’ll begin to discover which times are the most\n        effective and which ones may need to be changed. The default schedule\n        was calculated to be the most ideal for everyone, not necessarily for\n        your audience.\n      </li>\n    </ol>\n    <p>\n      If you plan on using this tool, I recommend that you{\" \"}\n      <a href=\"http://bufferapp.com/r/507fd\">follow this link</a> and sign up.\n      This will give us both a referral bonus of one extra space in our queues.\n    </p>\n    <p>\n      What tools do you currently use to manage your tweets, if any? I’d love to\n      hear about them and try them out!\n    </p>\n  </BlogPage>\n);\n","date_published":"2012-07-10T15:00:00Z"},{"id":"https://mknepprath.com/writing/pocket","url":"https://mknepprath.com/writing/pocket","title":"Stay On Task with Pocket","content_text":"import BlogPage from \"core/blog-page\";\n\nexport const meta = {\n  published: true,\n  publishedAt: \"2012-07-10\",\n  title: \"Stay On Task with Pocket\"\n};\n\nexport default () => (\n  <BlogPage dateTime={meta.publishedAt} title={meta.title}>\n    <header>\n      <h1>{meta.title}</h1>\n    </header>\n\n    <p>\n      I am constantly reading new articles about design, technology, social\n      media, music, news, etc. It’s great and I enjoy it, but the sheer amount\n      of content posted online can become overwhelming, and can even distract\n      from the work I should be getting done.\n    </p>\n    <p>\n      Enter stage left: <a href=\"http://getpocket.com/\">Pocket</a>.\n    </p>\n    <p>\n      Pocket (formerly Read It Later) was not on my grid until the name change\n      and a recommendation by{\" \"}\n      <a href=\"https://twitter.com/LeoWid/\">Leo Widrich</a>, co-founder of{\" \"}\n      <a title=\"I'll cover this in a future post.\" href=\"http://bufferapp.com/\">\n        Buffer\n      </a>\n      . Here’s how it works:\n    </p>\n    <ol>\n      <li>\n        <b>Install the Pocket extension or bookmarklet.</b> To get the most out\n        of this service, you’ll want to{\" \"}\n        <a href=\"http://getpocket.com/add/\">\n          install the Chrome extension or bookmarklet\n        </a>\n        . This puts it at the top of your browser at all times. If you have\n        Chrome, the extension is recommended over the bookmarklet, as the\n        extension also integrates Pocket into many commonly viewed websites,\n        such as Twitter.\n      </li>\n      <li>\n        <b>Send all articles to the Pocket queue.</b> The goal of Pocket is to\n        save all the articles you want to read for later, when you have time set\n        aside to read them. This would ideally be a time when you have nothing\n        else you are capable of accomplishing, like on a bus ride or on a plane.\n        When you come across an article you want to read, click the extension or\n        bookmarklet, and the article will be sent to your queue. That’s it. If\n        you see a tweet that links to an article you want to read, click on the\n        tweet, and then click Pocket. Pocket even claims to be integrated into\n        300+ different apps, including Flipboard. It’s extremely easy to collect\n        articles from every source you might be browsing on a regular basis.\n      </li>\n      <li>\n        <b>Read the articles.</b> When you want to read these saved articles\n        later, Pocket allows you to view your queue on{\" \"}\n        <a href=\"http://getpocket.com/\">their website</a> or through their app\n        for iPhone, iPad, and Android.\n      </li>\n    </ol>\n    <p>\n      That’s it! Pocket’s versatility is it’s main strength, as you’re able to\n      pull articles through almost any venue, and read them later on the device\n      of your choosing. Try it out and share what works best for you!\n    </p>\n    <p>\n      Are you in need of a Pocket-like service? Have you found any alternatives\n      that you like better? Let me know!\n    </p>\n  </BlogPage>\n);\n","date_published":"2012-07-10T15:00:00Z"}]}